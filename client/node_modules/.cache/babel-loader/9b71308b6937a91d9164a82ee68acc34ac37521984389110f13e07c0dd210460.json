{"ast":null,"code":"var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\nimport copy from 'fast-copy';\nvar UNRESOLVED_LINK = {}; // unique object to avoid polyfill bloat using Symbol()\n\n/**\n * isLink Function\n * Checks if the object has sys.type \"Link\"\n * @param object\n */\nvar isLink = function isLink(object) {\n  return object && object.sys && object.sys.type === 'Link';\n};\n\n/**\n * Creates a string key for lookup in entityMap\n *\n * @param {*} sys\n * @param {String} sys.type\n * @param {String} sys.id\n * @return {String}\n */\nvar makeLookupKey = function makeLookupKey(sys) {\n  return sys.type + '!' + sys.id;\n};\n\n/**\n * getLink Function\n *\n * @param response\n * @param link\n * @return {undefined}\n */\nvar getLink = function getLink(entityMap, link) {\n  var _link$sys = link.sys,\n    type = _link$sys.linkType,\n    id = _link$sys.id;\n  var lookupKey = makeLookupKey({\n    type: type,\n    id: id\n  });\n  return entityMap.get(lookupKey) || UNRESOLVED_LINK;\n};\n\n/**\n * cleanUpLinks Function\n * - Removes unresolvable links from Arrays and Objects\n *\n * @param {Object[]|Object} input\n */\nvar cleanUpLinks = function cleanUpLinks(input) {\n  if (Array.isArray(input)) {\n    return input.filter(function (val) {\n      return val !== UNRESOLVED_LINK;\n    });\n  }\n  for (var key in input) {\n    if (input[key] === UNRESOLVED_LINK) {\n      delete input[key];\n    }\n  }\n  return input;\n};\n\n/**\n * walkMutate Function\n * @param input\n * @param predicate\n * @param mutator\n * @return {*}\n */\nvar walkMutate = function walkMutate(input, predicate, mutator, removeUnresolved) {\n  if (predicate(input)) {\n    return mutator(input);\n  }\n  if (input && (typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object') {\n    for (var key in input) {\n      // eslint-disable-next-line no-prototype-builtins\n      if (input.hasOwnProperty(key)) {\n        input[key] = walkMutate(input[key], predicate, mutator, removeUnresolved);\n      }\n    }\n    if (removeUnresolved) {\n      input = cleanUpLinks(input);\n    }\n  }\n  return input;\n};\nvar normalizeLink = function normalizeLink(entityMap, link, removeUnresolved) {\n  var resolvedLink = getLink(entityMap, link);\n  if (resolvedLink === UNRESOLVED_LINK) {\n    return removeUnresolved ? resolvedLink : link;\n  }\n  return resolvedLink;\n};\nvar makeEntryObject = function makeEntryObject(item, itemEntryPoints) {\n  if (!Array.isArray(itemEntryPoints)) {\n    return item;\n  }\n  var entryPoints = Object.keys(item).filter(function (ownKey) {\n    return itemEntryPoints.indexOf(ownKey) !== -1;\n  });\n  return entryPoints.reduce(function (entryObj, entryPoint) {\n    entryObj[entryPoint] = item[entryPoint];\n    return entryObj;\n  }, {});\n};\n\n/**\n * resolveResponse Function\n * Resolves contentful response to normalized form.\n * @param {Object} response Contentful response\n * @param {{removeUnresolved: Boolean, itemEntryPoints: Array<String>}|{}} options\n * @param {Boolean} options.removeUnresolved - Remove unresolved links default:false\n * @param {Array<String>} options.itemEntryPoints - Resolve links only in those item properties\n * @return {Object}\n */\nvar resolveResponse = function resolveResponse(response, options) {\n  options = options || {};\n  if (!response.items) {\n    return [];\n  }\n  var responseClone = copy(response);\n  var allIncludes = Object.keys(responseClone.includes || {}).reduce(function (all, type) {\n    return [].concat(_toConsumableArray(all), _toConsumableArray(response.includes[type]));\n  }, []);\n  var allEntries = [].concat(_toConsumableArray(responseClone.items), _toConsumableArray(allIncludes));\n  var entityMap = new Map(allEntries.map(function (entity) {\n    return [makeLookupKey(entity.sys), entity];\n  }));\n  allEntries.forEach(function (item) {\n    var entryObject = makeEntryObject(item, options.itemEntryPoints);\n    Object.assign(item, walkMutate(entryObject, isLink, function (link) {\n      return normalizeLink(entityMap, link, options.removeUnresolved);\n    }, options.removeUnresolved));\n  });\n  return responseClone.items;\n};\nexport default resolveResponse;","map":{"version":3,"names":["_typeof","Symbol","iterator","obj","constructor","prototype","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","copy","UNRESOLVED_LINK","isLink","object","sys","type","makeLookupKey","id","getLink","entityMap","link","_link$sys","linkType","lookupKey","get","cleanUpLinks","input","filter","val","key","walkMutate","predicate","mutator","removeUnresolved","hasOwnProperty","normalizeLink","resolvedLink","makeEntryObject","item","itemEntryPoints","entryPoints","Object","keys","ownKey","indexOf","reduce","entryObj","entryPoint","resolveResponse","response","options","items","responseClone","allIncludes","includes","all","concat","allEntries","Map","map","entity","forEach","entryObject","assign"],"sources":["C:/Users/dms_2/Desktop/ADM-newSite/client/node_modules/contentful-resolve-response/dist/esm/index.js"],"sourcesContent":["var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nimport copy from 'fast-copy';\n\nvar UNRESOLVED_LINK = {}; // unique object to avoid polyfill bloat using Symbol()\n\n/**\n * isLink Function\n * Checks if the object has sys.type \"Link\"\n * @param object\n */\nvar isLink = function isLink(object) {\n  return object && object.sys && object.sys.type === 'Link';\n};\n\n/**\n * Creates a string key for lookup in entityMap\n *\n * @param {*} sys\n * @param {String} sys.type\n * @param {String} sys.id\n * @return {String}\n */\nvar makeLookupKey = function makeLookupKey(sys) {\n  return sys.type + '!' + sys.id;\n};\n\n/**\n * getLink Function\n *\n * @param response\n * @param link\n * @return {undefined}\n */\nvar getLink = function getLink(entityMap, link) {\n  var _link$sys = link.sys,\n      type = _link$sys.linkType,\n      id = _link$sys.id;\n\n  var lookupKey = makeLookupKey({ type: type, id: id });\n\n  return entityMap.get(lookupKey) || UNRESOLVED_LINK;\n};\n\n/**\n * cleanUpLinks Function\n * - Removes unresolvable links from Arrays and Objects\n *\n * @param {Object[]|Object} input\n */\nvar cleanUpLinks = function cleanUpLinks(input) {\n  if (Array.isArray(input)) {\n    return input.filter(function (val) {\n      return val !== UNRESOLVED_LINK;\n    });\n  }\n  for (var key in input) {\n    if (input[key] === UNRESOLVED_LINK) {\n      delete input[key];\n    }\n  }\n  return input;\n};\n\n/**\n * walkMutate Function\n * @param input\n * @param predicate\n * @param mutator\n * @return {*}\n */\nvar walkMutate = function walkMutate(input, predicate, mutator, removeUnresolved) {\n  if (predicate(input)) {\n    return mutator(input);\n  }\n\n  if (input && (typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object') {\n    for (var key in input) {\n      // eslint-disable-next-line no-prototype-builtins\n      if (input.hasOwnProperty(key)) {\n        input[key] = walkMutate(input[key], predicate, mutator, removeUnresolved);\n      }\n    }\n    if (removeUnresolved) {\n      input = cleanUpLinks(input);\n    }\n  }\n  return input;\n};\n\nvar normalizeLink = function normalizeLink(entityMap, link, removeUnresolved) {\n  var resolvedLink = getLink(entityMap, link);\n  if (resolvedLink === UNRESOLVED_LINK) {\n    return removeUnresolved ? resolvedLink : link;\n  }\n  return resolvedLink;\n};\n\nvar makeEntryObject = function makeEntryObject(item, itemEntryPoints) {\n  if (!Array.isArray(itemEntryPoints)) {\n    return item;\n  }\n\n  var entryPoints = Object.keys(item).filter(function (ownKey) {\n    return itemEntryPoints.indexOf(ownKey) !== -1;\n  });\n\n  return entryPoints.reduce(function (entryObj, entryPoint) {\n    entryObj[entryPoint] = item[entryPoint];\n    return entryObj;\n  }, {});\n};\n\n/**\n * resolveResponse Function\n * Resolves contentful response to normalized form.\n * @param {Object} response Contentful response\n * @param {{removeUnresolved: Boolean, itemEntryPoints: Array<String>}|{}} options\n * @param {Boolean} options.removeUnresolved - Remove unresolved links default:false\n * @param {Array<String>} options.itemEntryPoints - Resolve links only in those item properties\n * @return {Object}\n */\nvar resolveResponse = function resolveResponse(response, options) {\n  options = options || {};\n  if (!response.items) {\n    return [];\n  }\n  var responseClone = copy(response);\n  var allIncludes = Object.keys(responseClone.includes || {}).reduce(function (all, type) {\n    return [].concat(_toConsumableArray(all), _toConsumableArray(response.includes[type]));\n  }, []);\n\n  var allEntries = [].concat(_toConsumableArray(responseClone.items), _toConsumableArray(allIncludes));\n\n  var entityMap = new Map(allEntries.map(function (entity) {\n    return [makeLookupKey(entity.sys), entity];\n  }));\n\n  allEntries.forEach(function (item) {\n    var entryObject = makeEntryObject(item, options.itemEntryPoints);\n\n    Object.assign(item, walkMutate(entryObject, isLink, function (link) {\n      return normalizeLink(entityMap, link, options.removeUnresolved);\n    }, options.removeUnresolved));\n  });\n\n  return responseClone.items;\n};\n\nexport default resolveResponse;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}