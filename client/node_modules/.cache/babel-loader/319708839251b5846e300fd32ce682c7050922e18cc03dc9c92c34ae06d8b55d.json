{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dms_2\\\\Documents\\\\AddMustard-repos\\\\addMusatrd\\\\client\\\\src\\\\Components\\\\Grid\\\\Grid.tsx\",\n  _s = $RefreshSig$();\n/*\r\n    Project : AddMustard\r\n    Author(s) : David Charles\r\n*/\n\n//Dependancies\nimport React from \"react\";\nimport { Children, useState } from \"react\";\n\n//Components\nimport TiltButton from \"../Buttons/TiltButton\";\n\n//Styles\nimport \"./Grid.scss\";\n\n//Interfaces\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//Component\nconst Grid = props => {\n  _s();\n  //Properties\n  const childrenCount = Children.count(props.children);\n  const childrenArray = Children.toArray(props.children);\n  const gridClass = props.data.gridClass;\n  const gridLoadCount = props.data.gridLoadCount;\n  const gridPagination = props.data.gridPagination;\n  const gridPaginationCopy = props.data.gridPaginationCopy;\n  const gridPaginationLinkHref = props.data.gridPaginationLinkHref;\n  const gridPaginationLinkType = props.data.gridPaginationLinkType;\n\n  //states\n  var [currentActiveItemsCount, setCurrentActiveItemsCount] = useState(gridLoadCount);\n  var [loadMoreButtonHidden, setLoadMoreButtonHidden] = useState(gridLoadCount > childrenCount);\n\n  //refs\n  //const pagedRef = useRef(); //any\n\n  //functions\n  const generatePaginationContainer = () => {\n    if (gridPagination === \"none\") {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    } else if (gridPagination === \"link\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"paginationContainer link\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner\",\n          children: /*#__PURE__*/_jsxDEV(TiltButton, {\n            data: {\n              buttonClass: \"\",\n              buttonCopy: gridPaginationCopy,\n              buttonIcon: \"\",\n              buttonType: gridPaginationLinkType,\n              buttonHref: gridPaginationLinkHref,\n              buttonFunction: () => {},\n              tiltBackgroundColor: \"#000\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this);\n    } else if (gridPagination === \"loadMore\") {\n      if (loadMoreButtonHidden) {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"paginationContainer loadMore\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner\",\n            children: /*#__PURE__*/_jsxDEV(TiltButton, {\n              data: {\n                buttonClass: \"\",\n                buttonCopy: gridPaginationCopy,\n                buttonIcon: \"\",\n                buttonType: \"function\",\n                buttonHref: \"\",\n                buttonFunction: handleLoadMore,\n                tiltBackgroundColor: \"#000\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this);\n      }\n    } else if (gridPagination === \"paged\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"paginationContainer paged\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    }\n  };\n  const handleLoadMore = () => {\n    var newActiveItemCount = currentActiveItemsCount + gridLoadCount > childrenCount ? childrenCount : currentActiveItemsCount + gridLoadCount;\n    if (newActiveItemCount === childrenCount) {\n      setLoadMoreButtonHidden(true);\n    }\n    setCurrentActiveItemsCount(newActiveItemCount);\n  };\n  const handlePaged = () => {\n    console.log(\"handle grid paged function\");\n  };\n\n  //variables\n  const GridClass = gridClass ? \"Grid \" + gridClass : \"Grid\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: GridClass,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"outer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner\",\n        children: childrenCount > 0 ? childrenArray.map((child, key) => {\n          const childClass = currentActiveItemsCount - 1 >= key ? \"item active\" : \"item\";\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: childClass,\n            children: child\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 37\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), generatePaginationContainer()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, this);\n};\n_s(Grid, \"dmrkaONaVFHuO2BP5fmZebExxY0=\");\n_c = Grid;\nexport default Grid;\nvar _c;\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["React","Children","useState","TiltButton","Grid","props","childrenCount","count","children","childrenArray","toArray","gridClass","data","gridLoadCount","gridPagination","gridPaginationCopy","gridPaginationLinkHref","gridPaginationLinkType","currentActiveItemsCount","setCurrentActiveItemsCount","loadMoreButtonHidden","setLoadMoreButtonHidden","generatePaginationContainer","buttonClass","buttonCopy","buttonIcon","buttonType","buttonHref","buttonFunction","tiltBackgroundColor","handleLoadMore","newActiveItemCount","handlePaged","console","log","GridClass","map","child","key","childClass"],"sources":["C:/Users/dms_2/Documents/AddMustard-repos/addMusatrd/client/src/Components/Grid/Grid.tsx"],"sourcesContent":["/*\r\n    Project : AddMustard\r\n    Author(s) : David Charles\r\n*/\r\n\r\n//Dependancies\r\nimport React from \"react\";\r\nimport {Children, useRef, useState} from \"react\";\r\n\r\n//Components\r\nimport TiltButton from \"../Buttons/TiltButton\";\r\n\r\n//Styles\r\nimport \"./Grid.scss\";\r\n\r\n//Interfaces\r\nimport { GridInterface } from \"./GridInterfaces\";\r\n\r\n//Component\r\nconst Grid : React.FC<GridInterface> = (props : GridInterface) => {\r\n    //Properties\r\n    const childrenCount : number = Children.count(props.children);\r\n    const childrenArray : Array<React.ReactNode> = Children.toArray(props.children);\r\n    const gridClass : string | undefined = props.data.gridClass;\r\n    const gridLoadCount : number = props.data.gridLoadCount;\r\n    const gridPagination : string | undefined = props.data.gridPagination;\r\n    const gridPaginationCopy : string | undefined = props.data.gridPaginationCopy;\r\n    const gridPaginationLinkHref : string | undefined = props.data.gridPaginationLinkHref;\r\n    const gridPaginationLinkType : string | undefined = props.data.gridPaginationLinkType;\r\n    \r\n    //states\r\n    var [currentActiveItemsCount, setCurrentActiveItemsCount] = useState<number>(gridLoadCount);\r\n    var [loadMoreButtonHidden, setLoadMoreButtonHidden] = useState<boolean>((gridLoadCount > childrenCount));\r\n\r\n    //refs\r\n    //const pagedRef = useRef(); //any\r\n\r\n    //functions\r\n    const generatePaginationContainer = () => {\r\n        if (gridPagination === \"none\") {\r\n            return <></>\r\n\r\n        } else if (gridPagination === \"link\") {\r\n            return (\r\n                <div className=\"paginationContainer link\">\r\n                    <div className=\"inner\">\r\n                        <TiltButton data={{\r\n                            buttonClass : \"\",\r\n                            buttonCopy : gridPaginationCopy,\r\n                            buttonIcon : \"\",\r\n                            buttonType : gridPaginationLinkType,\r\n                            buttonHref : gridPaginationLinkHref,\r\n                            buttonFunction : () => {},\r\n                            tiltBackgroundColor : \"#000\"\r\n                        }} />\r\n                    </div>\r\n                </div>\r\n            )\r\n\r\n        } else if (gridPagination === \"loadMore\") {\r\n            if (loadMoreButtonHidden) {\r\n                return <></>\r\n\r\n            } else {\r\n                return (\r\n                    <div className=\"paginationContainer loadMore\">\r\n                        <div className=\"inner\">\r\n                            <TiltButton data={{\r\n                                buttonClass : \"\",\r\n                                buttonCopy : gridPaginationCopy,\r\n                                buttonIcon : \"\",\r\n                                buttonType : \"function\",\r\n                                buttonHref : \"\",\r\n                                buttonFunction : handleLoadMore,\r\n                                tiltBackgroundColor : \"#000\"\r\n                            }} />\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n        } else if (gridPagination === \"paged\") {\r\n            return (\r\n                <div className=\"paginationContainer paged\">\r\n                    <div className=\"inner\">\r\n                        {/* <Button ref={pagedRef} data={{\r\n                            customClass : \"\",\r\n                            itemCopy : gridPaginationCopy,\r\n                            itemIcon : \"\",\r\n                            itemType : \"function\",\r\n                            itemHref : \"\",\r\n                            itemFunction : handlePaged\r\n                        }} /> */}\r\n                    </div>\r\n                </div>\r\n            )\r\n\r\n        } else {\r\n            return <></>\r\n        }\r\n    };\r\n    const handleLoadMore = () => {\r\n        var newActiveItemCount : number = currentActiveItemsCount + gridLoadCount > childrenCount ? childrenCount : currentActiveItemsCount + gridLoadCount;\r\n\r\n        if (newActiveItemCount === childrenCount) {\r\n            setLoadMoreButtonHidden(true);\r\n\r\n        }\r\n\r\n        setCurrentActiveItemsCount(newActiveItemCount);\r\n    };\r\n    const handlePaged = () => {\r\n        console.log(\"handle grid paged function\");\r\n    }\r\n\r\n    //variables\r\n    const GridClass : string = gridClass ? \"Grid \" + gridClass : \"Grid\";\r\n    \r\n    return (\r\n        <div className={GridClass}>\r\n            <div className=\"outer\">\r\n                <div className=\"inner\">\r\n                    {\r\n                        childrenCount > 0 ?\r\n                            childrenArray.map((child : React.ReactNode, key : number) => {\r\n                                const childClass : string = currentActiveItemsCount - 1 >= key ? \"item active\" : \"item\";\r\n\r\n                                return (\r\n                                    <div className={childClass} key={key}>\r\n                                        {child}\r\n                                    </div>\r\n                                )\r\n                            })\r\n                            :\r\n                            <></>\r\n                    }\r\n                </div>\r\n\r\n                {generatePaginationContainer()}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Grid;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}