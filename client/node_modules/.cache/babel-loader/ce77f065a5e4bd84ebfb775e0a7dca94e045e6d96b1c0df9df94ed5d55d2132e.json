{"ast":null,"code":"/*\r\n    Project : AddMustard\r\n    Author(s) : David Charles\r\n*/ //Dependencies\nimport React from\"react\";import{generateRandomNumber}from\"../../Utilities/helpers\";//Interfaces\n//Styles\nimport\"./Tilt.scss\";//Component\nimport{jsx as _jsx}from\"react/jsx-runtime\";var Tilt=function Tilt(props){//Properties\nvar maxRotation=props.data.maxRotation;var maxSkew=props.data.maxSkew;var backgroundColor=props.data.backgroundColor;//Functions\nvar generateTiltValues=function generateTiltValues(props){/*\r\n            Creates a random value between -maxTiltVale and +maxTiltValue\r\n            Take random Number between -maxTiltVale and +maxTiltVale\r\n            Multiply the Number by -1 to the power of 1 or 2 (generated randomly)\r\n        */var rotation=generateRandomNumber(-1*props.maxRotation,props.maxRotation)*Math.pow(-1,generateRandomNumber(1,2));var skew=generateRandomNumber(-1*props.maxSkew,props.maxSkew)*Math.pow(-1,generateRandomNumber(1,2));var tiltValues={rotation:rotation,skew:skew};return tiltValues;};//Variables\nvar tiltValueProps={maxRotation:maxRotation,maxSkew:maxSkew};var tiltValues=generateTiltValues(tiltValueProps);var tiltStyle={backgroundColor:backgroundColor,transform:\"rotate(\"+tiltValues.rotation+\"deg) skewX(\"+tiltValues.skew+\"deg)\"};return/*#__PURE__*/_jsx(\"div\",{className:\"tiltContainer\",children:/*#__PURE__*/_jsx(\"div\",{className:\"tilt\",children:/*#__PURE__*/_jsx(\"div\",{className:\"inner\",style:tiltStyle})})});};export default Tilt;","map":{"version":3,"names":["React","generateRandomNumber","Tilt","props","maxRotation","data","maxSkew","backgroundColor","generateTiltValues","rotation","Math","pow","skew","tiltValues","tiltValueProps","tiltStyle","transform"],"sources":["C:/Users/dms_2/Desktop/test/ADM-newSite/client/src/Components/Tilt/Tilt.tsx"],"sourcesContent":["/*\r\n    Project : AddMustard\r\n    Author(s) : David Charles\r\n*/\r\n\r\n//Dependencies\r\nimport React from \"react\";\r\nimport { generateRandomNumber } from \"../../Utilities/helpers\";\r\n\r\n//Interfaces\r\nimport { TiltInterface,TiltStyleInterface, TiltValueInterface, GenerateTiltValuesParametersInterface } from \"./TiltInterfaces\";\r\n\r\n//Styles\r\nimport \"./Tilt.scss\";\r\n\r\n//Component\r\nconst Tilt : React.FC<TiltInterface> = (props : TiltInterface) => {\r\n    //Properties\r\n    const maxRotation : number = props.data.maxRotation;\r\n    const maxSkew : number = props.data.maxSkew;\r\n    const backgroundColor : string = props.data.backgroundColor;\r\n\r\n    //Functions\r\n    const generateTiltValues : (props : GenerateTiltValuesParametersInterface) => TiltValueInterface = (props) => {\r\n        /*\r\n            Creates a random value between -maxTiltVale and +maxTiltValue\r\n            Take random Number between -maxTiltVale and +maxTiltVale\r\n            Multiply the Number by -1 to the power of 1 or 2 (generated randomly)\r\n        */\r\n        const rotation : number = generateRandomNumber((-1) * props.maxRotation, props.maxRotation) * Math.pow(-1, generateRandomNumber(1, 2));\r\n        const skew : number = generateRandomNumber((-1) * props.maxSkew, props.maxSkew) * Math.pow(-1, generateRandomNumber(1, 2));\r\n    \r\n        const tiltValues : TiltValueInterface = {\r\n            rotation : rotation,\r\n            skew : skew\r\n        };\r\n    \r\n        return tiltValues;\r\n    };\r\n\r\n    //Variables\r\n    const tiltValueProps : GenerateTiltValuesParametersInterface = {\r\n        maxRotation : maxRotation,\r\n        maxSkew : maxSkew\r\n    };\r\n    const tiltValues : TiltValueInterface = generateTiltValues(tiltValueProps);\r\n    const tiltStyle : TiltStyleInterface = {\r\n        backgroundColor : backgroundColor,\r\n        transform : \"rotate(\" + tiltValues.rotation + \"deg) skewX(\" + tiltValues.skew + \"deg)\"\r\n    };\r\n\r\n    return (\r\n        <div className=\"tiltContainer\">\r\n            <div className=\"tilt\">\r\n                <div className=\"inner\" style={tiltStyle} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Tilt;"],"mappings":"AAAA;AACA;AACA;AACA,EAHA,CAKA;AACA,MAAOA,MAAK,KAAM,OAAO,CACzB,OAASC,oBAAoB,KAAQ,yBAAyB,CAE9D;AAGA;AACA,MAAO,aAAa,CAEpB;AAAA,2CACA,GAAMC,KAA8B,CAAG,QAAjCA,KAA8B,CAAIC,KAAqB,CAAK,CAC9D;AACA,GAAMC,YAAoB,CAAGD,KAAK,CAACE,IAAI,CAACD,WAAW,CACnD,GAAME,QAAgB,CAAGH,KAAK,CAACE,IAAI,CAACC,OAAO,CAC3C,GAAMC,gBAAwB,CAAGJ,KAAK,CAACE,IAAI,CAACE,eAAe,CAE3D;AACA,GAAMC,mBAA0F,CAAG,QAA7FA,mBAA0F,CAAIL,KAAK,CAAK,CAC1G;AACR;AACA;AACA;AACA,UACQ,GAAMM,SAAiB,CAAGR,oBAAoB,CAAE,CAAC,CAAC,CAAIE,KAAK,CAACC,WAAW,CAAED,KAAK,CAACC,WAAW,CAAC,CAAGM,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC,CAAEV,oBAAoB,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CACtI,GAAMW,KAAa,CAAGX,oBAAoB,CAAE,CAAC,CAAC,CAAIE,KAAK,CAACG,OAAO,CAAEH,KAAK,CAACG,OAAO,CAAC,CAAGI,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC,CAAEV,oBAAoB,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CAE1H,GAAMY,WAA+B,CAAG,CACpCJ,QAAQ,CAAGA,QAAQ,CACnBG,IAAI,CAAGA,IACX,CAAC,CAED,MAAOC,WAAU,CACrB,CAAC,CAED;AACA,GAAMC,eAAsD,CAAG,CAC3DV,WAAW,CAAGA,WAAW,CACzBE,OAAO,CAAGA,OACd,CAAC,CACD,GAAMO,WAA+B,CAAGL,kBAAkB,CAACM,cAAc,CAAC,CAC1E,GAAMC,UAA8B,CAAG,CACnCR,eAAe,CAAGA,eAAe,CACjCS,SAAS,CAAG,SAAS,CAAGH,UAAU,CAACJ,QAAQ,CAAG,aAAa,CAAGI,UAAU,CAACD,IAAI,CAAG,MACpF,CAAC,CAED,mBACI,YAAK,SAAS,CAAC,eAAe,uBAC1B,YAAK,SAAS,CAAC,MAAM,uBACjB,YAAK,SAAS,CAAC,OAAO,CAAC,KAAK,CAAEG,SAAU,EAAG,EACzC,EACJ,CAEd,CAAC,CACD,cAAeb,KAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}