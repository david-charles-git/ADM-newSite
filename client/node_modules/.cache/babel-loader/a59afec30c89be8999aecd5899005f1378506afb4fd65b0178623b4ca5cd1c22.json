{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dms_2\\\\Documents\\\\AddMustard-repos\\\\addMusatrd\\\\client\\\\src\\\\Components\\\\Grid\\\\Grid.js\",\n  _s = $RefreshSig$();\n/*\r\n    Project : AddMustard\r\n    Author(s) : David Charles\r\n*/\n\n//dependancies\nimport { Children, useRef, useState } from \"react\";\n\n//components\nimport Button from \"../Buttons/Button\";\n\n//styles\nimport \"./Grid.scss\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Grid(props) {\n  _s();\n  //props\n  const childrenCount = Children.count(props.children); //number\n  const childrenArray = Children.toArray(props.children); //Array<any>\n  const customClass = props.componentData.customClass; //string\n  const loadCount = props.componentData.loadCount; //number\n  const pagination = props.componentData.pagination; //string\n  const paginationCopy = props.componentData.paginationCopy; //string\n  const paginationLinkHref = props.componentData.paginationLinkHref; //string\n  const paginationLinkType = props.componentData.paginationLinkType; //string\n\n  //states\n  var [currentActiveItemsCount, setCurrentActiveItemsCount] = useState(loadCount); //number\n  var [loadMoreButtonHidden, setLoadMoreButtonHidden] = useState(loadCount > childrenCount); //bool\n\n  //refs\n  const pagedRef = useRef(); //any\n\n  //functions\n  const generatePaginationContainer = () => {\n    if (pagination === \"none\") {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    } else if (pagination === \"link\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"paginationContainer link\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            componentData: {\n              customClass: \"\",\n              itemCopy: paginationCopy,\n              itemIcon: \"\",\n              itemType: paginationLinkType,\n              itemHref: paginationLinkHref,\n              itemFunction: () => {}\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this);\n    } else if (pagination === \"loadMore\") {\n      if (loadMoreButtonHidden) {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"paginationContainer loadMore\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              componentData: {\n                customClass: \"\",\n                itemCopy: paginationCopy,\n                itemIcon: \"\",\n                itemType: \"function\",\n                itemHref: \"\",\n                itemFunction: handleLoadMore\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this);\n      }\n    } else if (pagination === \"paged\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"paginationContainer paged\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            ref: pagedRef,\n            componentData: {\n              customClass: \"\",\n              itemCopy: paginationCopy,\n              itemIcon: \"\",\n              itemType: \"function\",\n              itemHref: \"\",\n              itemFunction: handlePaged\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    }\n  };\n  const handleLoadMore = () => {\n    var newActiveItemCount = currentActiveItemsCount + loadCount > childrenCount ? childrenCount : currentActiveItemsCount + loadCount; //number\n\n    if (newActiveItemCount === childrenCount) {\n      setLoadMoreButtonHidden(true);\n    }\n    setCurrentActiveItemsCount(newActiveItemCount);\n  };\n  const handlePaged = () => {\n    console.log(\"handle grid paged function\");\n  };\n\n  //variables\n  const componentClass = customClass ? \"Grid \" + customClass : \"Grid\"; //string\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: componentClass,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"outer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner\",\n        children: childrenCount > 0 ? childrenArray.map((child, key) => {\n          const childClass = currentActiveItemsCount - 1 >= key ? \"item active\" : \"item\"; //string\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: childClass,\n            children: child\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 37\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), generatePaginationContainer()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n}\n_s(Grid, \"9so2TUJ0jOb0/uQUgGvAYzvzL94=\");\n_c = Grid;\nvar _c;\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["Children","useRef","useState","Button","Grid","props","childrenCount","count","children","childrenArray","toArray","customClass","componentData","loadCount","pagination","paginationCopy","paginationLinkHref","paginationLinkType","currentActiveItemsCount","setCurrentActiveItemsCount","loadMoreButtonHidden","setLoadMoreButtonHidden","pagedRef","generatePaginationContainer","itemCopy","itemIcon","itemType","itemHref","itemFunction","handleLoadMore","handlePaged","newActiveItemCount","console","log","componentClass","map","child","key","childClass"],"sources":["C:/Users/dms_2/Documents/AddMustard-repos/addMusatrd/client/src/Components/Grid/Grid.js"],"sourcesContent":["/*\r\n    Project : AddMustard\r\n    Author(s) : David Charles\r\n*/\r\n\r\n//dependancies\r\nimport {Children, useRef, useState} from \"react\";\r\n\r\n//components\r\nimport Button from \"../Buttons/Button\";\r\n\r\n//styles\r\nimport \"./Grid.scss\";\r\n\r\n\r\n\r\nexport default function Grid(props) {\r\n    //props\r\n    const childrenCount = Children.count(props.children); //number\r\n    const childrenArray = Children.toArray(props.children); //Array<any>\r\n    const customClass = props.componentData.customClass; //string\r\n    const loadCount = props.componentData.loadCount; //number\r\n    const pagination = props.componentData.pagination; //string\r\n    const paginationCopy = props.componentData.paginationCopy; //string\r\n    const paginationLinkHref = props.componentData.paginationLinkHref; //string\r\n    const paginationLinkType = props.componentData.paginationLinkType; //string\r\n    \r\n    //states\r\n    var [currentActiveItemsCount, setCurrentActiveItemsCount] = useState(loadCount); //number\r\n    var [loadMoreButtonHidden, setLoadMoreButtonHidden] = useState((loadCount > childrenCount)); //bool\r\n\r\n    //refs\r\n    const pagedRef = useRef(); //any\r\n\r\n    //functions\r\n    const generatePaginationContainer = () => {\r\n        if (pagination === \"none\") {\r\n            return <></>\r\n\r\n        } else if (pagination === \"link\") {\r\n            return (\r\n                <div className=\"paginationContainer link\">\r\n                    <div className=\"inner\">\r\n                        <Button componentData={{\r\n                            customClass : \"\",\r\n                            itemCopy : paginationCopy,\r\n                            itemIcon : \"\",\r\n                            itemType : paginationLinkType,\r\n                            itemHref : paginationLinkHref,\r\n                            itemFunction : () => {}\r\n                        }} />\r\n                    </div>\r\n                </div>\r\n            )\r\n\r\n        } else if (pagination === \"loadMore\") {\r\n            if (loadMoreButtonHidden) {\r\n                return <></>\r\n\r\n            } else {\r\n                return (\r\n                    <div className=\"paginationContainer loadMore\">\r\n                        <div className=\"inner\">\r\n                            <Button componentData={{\r\n                                customClass : \"\",\r\n                                itemCopy : paginationCopy,\r\n                                itemIcon : \"\",\r\n                                itemType : \"function\",\r\n                                itemHref : \"\",\r\n                                itemFunction : handleLoadMore\r\n                            }} />\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n        } else if (pagination === \"paged\") {\r\n            return (\r\n                <div className=\"paginationContainer paged\">\r\n                    <div className=\"inner\">\r\n                        <Button ref={pagedRef} componentData={{\r\n                            customClass : \"\",\r\n                            itemCopy : paginationCopy,\r\n                            itemIcon : \"\",\r\n                            itemType : \"function\",\r\n                            itemHref : \"\",\r\n                            itemFunction : handlePaged\r\n                        }} />\r\n                    </div>\r\n                </div>\r\n            )\r\n\r\n        } else {\r\n            return <></>\r\n        }\r\n    };\r\n    const handleLoadMore = () => {\r\n        var newActiveItemCount = currentActiveItemsCount + loadCount > childrenCount ? childrenCount : currentActiveItemsCount + loadCount; //number\r\n\r\n        if (newActiveItemCount === childrenCount) {\r\n            setLoadMoreButtonHidden(true);\r\n\r\n        }\r\n\r\n        setCurrentActiveItemsCount(newActiveItemCount);\r\n    };\r\n    const handlePaged = () => {\r\n        console.log(\"handle grid paged function\");\r\n    }\r\n\r\n    //variables\r\n    const componentClass = customClass ? \"Grid \" + customClass : \"Grid\"; //string\r\n    \r\n    return (\r\n        <div className={componentClass}>\r\n            <div className=\"outer\">\r\n                <div className=\"inner\">\r\n                    {\r\n                        childrenCount > 0 ?\r\n                            childrenArray.map((child, key) => {\r\n                                const childClass = currentActiveItemsCount - 1 >= key ? \"item active\" : \"item\"; //string\r\n\r\n                                return (\r\n                                    <div className={childClass} key={key}>\r\n                                        {child}\r\n                                    </div>\r\n                                )\r\n                            })\r\n                            :\r\n                            <></>\r\n                    }\r\n                </div>\r\n\r\n                {generatePaginationContainer()}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}