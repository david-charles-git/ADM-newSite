{"ast":null,"code":"/*\r\n    Project : AddMustard\r\n    Author(s) : David Charles\r\n*/\n\n//Dependencies\n\nconst maxRotationValue = 4;\nconst maxSkewValue = 4;\nexport const generateTiltValues = () => {\n  //Random Values\n  const rotationRand = Math.floor(Math.random() * 100);\n  const skewRand = Math.floor(Math.random() * 200);\n\n  //Generate Tilt Values\n  /*\r\n      Creates a random value between - maxTiltVale and + maxTiltValue\r\n      Take random Number between 0 and 100\r\n      Get the Modulus of the random value and the maxTiltValue + 1 (to ensure the max value is a possible value)\r\n      Multiply the Modulus by -1 to the power of 1 or 2 (generated randomly from the Modulo 2 of the random number plus 1)\r\n  */\n  const randomRotation = rotationRand % (maxRotationValue + 1) * Math.pow(-1, rotationRand % 2 + 1);\n  const randomSkew = rotationRand % (maxSkewValue + 1) * Math.pow(-1, skewRand % 2);\n  const tiltValues = {\n    rotation: randomRotation,\n    skew: randomSkew\n  };\n  return tiltValues;\n};","map":{"version":3,"names":["maxRotationValue","maxSkewValue","generateTiltValues","rotationRand","Math","floor","random","skewRand","randomRotation","pow","randomSkew","tiltValues","rotation","skew"],"sources":["C:/Users/dms_2/Documents/AddMustard-repos/addMusatrd/client/src/Utilities/helpers.ts"],"sourcesContent":["/*\r\n    Project : AddMustard\r\n    Author(s) : David Charles\r\n*/\r\n\r\n//Dependencies\r\nimport { TiltValueInterface } from \"./helperInterfaces\";\r\n\r\nconst maxRotationValue = 4;\r\nconst maxSkewValue = 4;\r\n\r\nexport const generateTiltValues : () => TiltValueInterface = () => {\r\n    //Random Values\r\n    const rotationRand : number = Math.floor( Math.random() * 100 );\r\n    const skewRand : number = Math.floor( Math.random() * 200);\r\n\r\n    //Generate Tilt Values\r\n    /*\r\n        Creates a random value between - maxTiltVale and + maxTiltValue\r\n        Take random Number between 0 and 100\r\n        Get the Modulus of the random value and the maxTiltValue + 1 (to ensure the max value is a possible value)\r\n        Multiply the Modulus by -1 to the power of 1 or 2 (generated randomly from the Modulo 2 of the random number plus 1)\r\n    */\r\n    const randomRotation : number = ( rotationRand % ( maxRotationValue + 1 ) ) * ( Math.pow(-1, ( (rotationRand % 2) + 1 )) );\r\n    const randomSkew : number = ( rotationRand % ( maxSkewValue + 1 ) ) * ( Math.pow(-1, ( skewRand % 2 )) );\r\n\r\n    const tiltValues : TiltValueInterface = {\r\n        rotation : randomRotation,\r\n        skew : randomSkew\r\n    };\r\n\r\n    return tiltValues;\r\n};"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;;AAGA,MAAMA,gBAAgB,GAAG,CAAC;AAC1B,MAAMC,YAAY,GAAG,CAAC;AAEtB,OAAO,MAAMC,kBAA6C,GAAG,MAAM;EAC/D;EACA,MAAMC,YAAqB,GAAGC,IAAI,CAACC,KAAK,CAAED,IAAI,CAACE,MAAM,EAAE,GAAG,GAAG,CAAE;EAC/D,MAAMC,QAAiB,GAAGH,IAAI,CAACC,KAAK,CAAED,IAAI,CAACE,MAAM,EAAE,GAAG,GAAG,CAAC;;EAE1D;EACA;AACJ;AACA;AACA;AACA;AACA;EACI,MAAME,cAAuB,GAAKL,YAAY,IAAKH,gBAAgB,GAAG,CAAC,CAAE,GAAOI,IAAI,CAACK,GAAG,CAAC,CAAC,CAAC,EAAKN,YAAY,GAAG,CAAC,GAAI,CAAC,CAAK;EAC1H,MAAMO,UAAmB,GAAKP,YAAY,IAAKF,YAAY,GAAG,CAAC,CAAE,GAAOG,IAAI,CAACK,GAAG,CAAC,CAAC,CAAC,EAAIF,QAAQ,GAAG,CAAC,CAAK;EAExG,MAAMI,UAA+B,GAAG;IACpCC,QAAQ,EAAGJ,cAAc;IACzBK,IAAI,EAAGH;EACX,CAAC;EAED,OAAOC,UAAU;AACrB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}