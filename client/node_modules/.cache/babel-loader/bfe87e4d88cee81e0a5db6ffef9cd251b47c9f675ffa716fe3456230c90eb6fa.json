{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:/Users/dms_2/Desktop/test/ADM-newSite/client/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"C:/Users/dms_2/Desktop/test/ADM-newSite/client/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createContentfulApi;\nvar _contentfulSdkCore = require(\"contentful-sdk-core\");\nvar _entities = _interopRequireDefault(require(\"./entities\"));\nvar _pagedSync = _interopRequireDefault(require(\"./paged-sync\"));\nvar _normalizeSelect = _interopRequireDefault(require(\"./utils/normalize-select\"));\nvar _validateTimestamp = _interopRequireDefault(require(\"./utils/validate-timestamp\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nvar ASSET_KEY_MAX_LIFETIME = 48 * 60 * 60;\n\n/**\r\n * Creates API object with methods to access functionality from Contentful's\r\n * Delivery API\r\n * @private\r\n * @param {Object} params - API initialization params\r\n * @prop {Object} http - HTTP client instance\r\n * @prop {Object} entities - Object with wrapper methods for each kind of entity\r\n * @prop {Function} getGlobalOptions - Link resolver preconfigured with global setting\r\n * @return {ClientAPI}\r\n */\nfunction createContentfulApi(_ref) {\n  var http = _ref.http,\n    getGlobalOptions = _ref.getGlobalOptions;\n  var wrapSpace = _entities.default.space.wrapSpace;\n  var _entities$default$con = _entities.default.contentType,\n    wrapContentType = _entities$default$con.wrapContentType,\n    wrapContentTypeCollection = _entities$default$con.wrapContentTypeCollection;\n  var _entities$default$ent = _entities.default.entry,\n    wrapEntry = _entities$default$ent.wrapEntry,\n    wrapEntryCollection = _entities$default$ent.wrapEntryCollection;\n  var _entities$default$ass = _entities.default.asset,\n    wrapAsset = _entities$default$ass.wrapAsset,\n    wrapAssetCollection = _entities$default$ass.wrapAssetCollection;\n  var _entities$default$tag = _entities.default.tag,\n    wrapTag = _entities$default$tag.wrapTag,\n    wrapTagCollection = _entities$default$tag.wrapTagCollection;\n  var wrapAssetKey = _entities.default.assetKey.wrapAssetKey;\n  var wrapLocaleCollection = _entities.default.locale.wrapLocaleCollection;\n  var notFoundError = function notFoundError(id) {\n    var error = new Error('The resource could not be found.');\n    error.sys = {\n      type: 'Error',\n      id: 'NotFound'\n    };\n    error.details = {\n      type: 'Entry',\n      id: id,\n      environment: getGlobalOptions().environment,\n      space: getGlobalOptions().space\n    };\n    return error;\n  };\n\n  /**\r\n   * Gets the Space which the client is currently configured to use\r\n   * @memberof ContentfulClientAPI\r\n   * @return {Promise<Entities.Space>} Promise for a Space\r\n   * @example\r\n   * const contentful = require('contentful')\r\n   *\r\n   * const client = contentful.createClient({\r\n   *   space: '<space_id>',\r\n   *   accessToken: '<content_delivery_api_key>'\r\n   * })\r\n   * // returns the space object with the above <space-id>\r\n   * const space = await client.getSpace()\r\n   * console.log(space)\r\n   */\n  function getSpace() {\n    return _getSpace.apply(this, arguments);\n  }\n  /**\r\n   * Gets a Content Type\r\n   * @memberof ContentfulClientAPI\r\n   * @param  {string} id\r\n   * @return {Promise<Entities.ContentType>} Promise for a Content Type\r\n   * @example\r\n   * const contentful = require('contentful')\r\n   *\r\n   * const client = contentful.createClient({\r\n   *   space: '<space_id>',\r\n   *   accessToken: '<content_delivery_api_key>'\r\n   * })\r\n   *\r\n   * const contentType = await client.getContentType('<content_type_id>')\r\n   * console.log(contentType)\r\n   */\n  function _getSpace() {\n    _getSpace = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var response;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              switchToSpace(http);\n              _context.prev = 1;\n              _context.next = 4;\n              return http.get('/');\n            case 4:\n              response = _context.sent;\n              return _context.abrupt(\"return\", wrapSpace(response.data));\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              (0, _contentfulSdkCore.errorHandler)(_context.t0);\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 8]]);\n    }));\n    return _getSpace.apply(this, arguments);\n  }\n  function getContentType(_x) {\n    return _getContentType.apply(this, arguments);\n  }\n  /**\r\n   * Gets a collection of Content Types\r\n   * @memberof ContentfulClientAPI\r\n   * @param  {Object=} query - Object with search parameters. Check the <a href=\"https://www.contentful.com/developers/docs/javascript/tutorials/using-js-cda-sdk/#retrieving-entries-with-search-parameters\">JS SDK tutorial</a> and the <a href=\"https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/search-parameters\">REST API reference</a> for more details.\r\n   * @return {Promise<Entities.ContentTypeCollection>} Promise for a collection of Content Types\r\n   * @example\r\n   * const contentful = require('contentful')\r\n   *\r\n   * const client = contentful.createClient({\r\n   *   space: '<space_id>',\r\n   *   accessToken: '<content_delivery_api_key>'\r\n   * })\r\n   *\r\n   * const response = await client.getContentTypes()\r\n   * console.log(response.items)\r\n   */\n  function _getContentType() {\n    _getContentType = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(id) {\n      var response;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              switchToEnvironment(http);\n              _context2.prev = 1;\n              _context2.next = 4;\n              return http.get(\"content_types/\".concat(id));\n            case 4:\n              response = _context2.sent;\n              return _context2.abrupt(\"return\", wrapContentType(response.data));\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](1);\n              (0, _contentfulSdkCore.errorHandler)(_context2.t0);\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 8]]);\n    }));\n    return _getContentType.apply(this, arguments);\n  }\n  function getContentTypes() {\n    return _getContentTypes.apply(this, arguments);\n  }\n  /**\r\n   * Gets an Entry\r\n   * @memberof ContentfulClientAPI\r\n   * @param  {string} id\r\n   * @param  {Object=} query - Object with search parameters. In this method it's only useful for `locale`.\r\n   * @return {Promise<Entities.Entry>} Promise for an Entry\r\n   * @example\r\n   * const contentful = require('contentful')\r\n   *\r\n   * const client = contentful.createClient({\r\n   *   space: '<space_id>',\r\n   *   accessToken: '<content_delivery_api_key>'\r\n   * })\r\n   *\r\n   * const entry = await client.getEntry('<entry_id>')\r\n   * console.log(entry)\r\n   */\n  function _getContentTypes() {\n    _getContentTypes = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n      var query,\n        response,\n        _args3 = arguments;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              query = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : {};\n              switchToEnvironment(http);\n              _context3.prev = 2;\n              _context3.next = 5;\n              return http.get('content_types', (0, _contentfulSdkCore.createRequestConfig)({\n                query: query\n              }));\n            case 5:\n              response = _context3.sent;\n              return _context3.abrupt(\"return\", wrapContentTypeCollection(response.data));\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](2);\n              (0, _contentfulSdkCore.errorHandler)(_context3.t0);\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[2, 9]]);\n    }));\n    return _getContentTypes.apply(this, arguments);\n  }\n  function getEntry(_x2) {\n    return _getEntry.apply(this, arguments);\n  }\n  /**\r\n   * Gets a collection of Entries\r\n   * @memberof ContentfulClientAPI\r\n   * @param  {Object=} query - Object with search parameters. Check the <a href=\"https://www.contentful.com/developers/docs/javascript/tutorials/using-js-cda-sdk/#retrieving-entries-with-search-parameters\">JS SDK tutorial</a> and the <a href=\"https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/search-parameters\">REST API reference</a> for more details.\r\n   * @return {Promise<Entities.EntryCollection>} Promise for a collection of Entries\r\n   * @example\r\n   * const contentful = require('contentful')\r\n   *\r\n   * const client = contentful.createClient({\r\n   *   space: '<space_id>',\r\n   *   accessToken: '<content_delivery_api_key>'\r\n   * })\r\n   *\r\n   * const response = await client.getEntries()\r\n   * console.log(response.items)\r\n   */\n  function _getEntry() {\n    _getEntry = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(id) {\n      var query,\n        response,\n        _args4 = arguments;\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              query = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : {};\n              if (id) {\n                _context4.next = 3;\n                break;\n              }\n              throw notFoundError(id);\n            case 3:\n              _context4.prev = 3;\n              _context4.next = 6;\n              return this.getEntries(_objectSpread({\n                'sys.id': id\n              }, query));\n            case 6:\n              response = _context4.sent;\n              if (!(response.items.length > 0)) {\n                _context4.next = 11;\n                break;\n              }\n              return _context4.abrupt(\"return\", wrapEntry(response.items[0]));\n            case 11:\n              throw notFoundError(id);\n            case 12:\n              _context4.next = 17;\n              break;\n            case 14:\n              _context4.prev = 14;\n              _context4.t0 = _context4[\"catch\"](3);\n              (0, _contentfulSdkCore.errorHandler)(_context4.t0);\n            case 17:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this, [[3, 14]]);\n    }));\n    return _getEntry.apply(this, arguments);\n  }\n  function getEntries() {\n    return _getEntries.apply(this, arguments);\n  }\n  /**\r\n   * Gets an Asset\r\n   * @memberof ContentfulClientAPI\r\n   * @param  {string} id\r\n   * @param  {Object=} query - Object with search parameters. In this method it's only useful for `locale`.\r\n   * @return {Promise<Entities.Asset>} Promise for an Asset\r\n   * @example\r\n   * const contentful = require('contentful')\r\n   *\r\n   * const client = contentful.createClient({\r\n   *   space: '<space_id>',\r\n   *   accessToken: '<content_delivery_api_key>'\r\n   * })\r\n   *\r\n   * const asset = await client.getAsset('<asset_id>')\r\n   * console.log(asset)\r\n   */\n  function _getEntries() {\n    _getEntries = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n      var query,\n        _getGlobalOptions2,\n        resolveLinks,\n        removeUnresolved,\n        response,\n        _args5 = arguments;\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              query = _args5.length > 0 && _args5[0] !== undefined ? _args5[0] : {};\n              switchToEnvironment(http);\n              _getGlobalOptions2 = getGlobalOptions(query), resolveLinks = _getGlobalOptions2.resolveLinks, removeUnresolved = _getGlobalOptions2.removeUnresolved;\n              query = (0, _normalizeSelect.default)(query);\n              _context5.prev = 4;\n              _context5.next = 7;\n              return http.get('entries', (0, _contentfulSdkCore.createRequestConfig)({\n                query: query\n              }));\n            case 7:\n              response = _context5.sent;\n              return _context5.abrupt(\"return\", wrapEntryCollection(response.data, {\n                resolveLinks: resolveLinks,\n                removeUnresolved: removeUnresolved\n              }));\n            case 11:\n              _context5.prev = 11;\n              _context5.t0 = _context5[\"catch\"](4);\n              (0, _contentfulSdkCore.errorHandler)(_context5.t0);\n            case 14:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[4, 11]]);\n    }));\n    return _getEntries.apply(this, arguments);\n  }\n  function getAsset(_x3) {\n    return _getAsset.apply(this, arguments);\n  }\n  /**\r\n   * Gets a collection of Assets\r\n   * @memberof ContentfulClientAPI\r\n   * @param  {Object=} query - Object with search parameters. Check the <a href=\"https://www.contentful.com/developers/docs/javascript/tutorials/using-js-cda-sdk/#retrieving-entries-with-search-parameters\">JS SDK tutorial</a> and the <a href=\"https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/search-parameters\">REST API reference</a> for more details.\r\n   * @return {Promise<Entities.AssetCollection>} Promise for a collection of Assets\r\n   * @example\r\n   * const contentful = require('contentful')\r\n   *\r\n   * const client = contentful.createClient({\r\n   *   space: '<space_id>',\r\n   *   accessToken: '<content_delivery_api_key>'\r\n   * })\r\n   *\r\n   * const response = await client.getAssets()\r\n   * console.log(response.items)\r\n   */\n  function _getAsset() {\n    _getAsset = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(id) {\n      var query,\n        response,\n        _args6 = arguments;\n      return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              query = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : {};\n              switchToEnvironment(http);\n              query = (0, _normalizeSelect.default)(query);\n              _context6.prev = 3;\n              _context6.next = 6;\n              return http.get(\"assets/\".concat(id), (0, _contentfulSdkCore.createRequestConfig)({\n                query: query\n              }));\n            case 6:\n              response = _context6.sent;\n              return _context6.abrupt(\"return\", wrapAsset(response.data));\n            case 10:\n              _context6.prev = 10;\n              _context6.t0 = _context6[\"catch\"](3);\n              (0, _contentfulSdkCore.errorHandler)(_context6.t0);\n            case 13:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[3, 10]]);\n    }));\n    return _getAsset.apply(this, arguments);\n  }\n  function getAssets() {\n    return _getAssets.apply(this, arguments);\n  }\n  /**\r\n   * Gets a Tag\r\n   * @memberof ContentfulClientAPI\r\n   * @param  {string} id\r\n   * @return {Promise<Entities.Tag>} Promise for a Tag\r\n   * @example\r\n   * const contentful = require('contentful')\r\n   *\r\n   * const client = contentful.createClient({\r\n   *   space: '<space_id>',\r\n   *   accessToken: '<content_delivery_api_key>'\r\n   * })\r\n   *\r\n   * const tag = await client.getTag('<asset_id>')\r\n   * console.log(tag)\r\n   */\n  function _getAssets() {\n    _getAssets = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n      var query,\n        response,\n        _args7 = arguments;\n      return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              query = _args7.length > 0 && _args7[0] !== undefined ? _args7[0] : {};\n              switchToEnvironment(http);\n              query = (0, _normalizeSelect.default)(query);\n              _context7.prev = 3;\n              _context7.next = 6;\n              return http.get('assets', (0, _contentfulSdkCore.createRequestConfig)({\n                query: query\n              }));\n            case 6:\n              response = _context7.sent;\n              return _context7.abrupt(\"return\", wrapAssetCollection(response.data));\n            case 10:\n              _context7.prev = 10;\n              _context7.t0 = _context7[\"catch\"](3);\n              (0, _contentfulSdkCore.errorHandler)(_context7.t0);\n            case 13:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[3, 10]]);\n    }));\n    return _getAssets.apply(this, arguments);\n  }\n  function getTag(_x4) {\n    return _getTag.apply(this, arguments);\n  }\n  /**\r\n   * Gets a collection of Tags\r\n   * @memberof ContentfulClientAPI\r\n   * @param  {Object=} query - Object with search parameters.\r\n   * @return {Promise<Entities.TagCollection>} Promise for a collection of Tags\r\n   * @example\r\n   * const contentful = require('contentful')\r\n   *\r\n   * const client = contentful.createClient({\r\n   *   space: '<space_id>',\r\n   *   accessToken: '<content_delivery_api_key>'\r\n   * })\r\n   *\r\n   * const response = await client.getTags()\r\n   * console.log(response.items)\r\n   */\n  function _getTag() {\n    _getTag = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(id) {\n      var response;\n      return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              switchToEnvironment(http);\n              _context8.prev = 1;\n              _context8.next = 4;\n              return http.get(\"tags/\".concat(id));\n            case 4:\n              response = _context8.sent;\n              return _context8.abrupt(\"return\", wrapTag(response.data));\n            case 8:\n              _context8.prev = 8;\n              _context8.t0 = _context8[\"catch\"](1);\n              (0, _contentfulSdkCore.errorHandler)(_context8.t0);\n            case 11:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8, null, [[1, 8]]);\n    }));\n    return _getTag.apply(this, arguments);\n  }\n  function getTags() {\n    return _getTags.apply(this, arguments);\n  }\n  /**\r\n   * Creates an asset key for signing asset URLs (Embargoed Assets)\r\n   * @memberof ContentfulClientAPI\r\n   * @param {number} expiresAt - UNIX timestamp in the future, maximum of 48h from now\r\n   * @return {Promise<Entities.AssetKey>} Promise for an AssetKey\r\n   * @example\r\n   * const contentful = require('contentful')\r\n   *\r\n   * const client = contentful.createClient({\r\n   *   space: '<space_id>',\r\n   *   accessToken: '<content_delivery_api_key>'\r\n   * })\r\n   *\r\n   * const assetKey = await client.getAssetKey(<UNIX timestamp>)\r\n   * console.log(assetKey)\r\n   */\n  function _getTags() {\n    _getTags = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n      var query,\n        response,\n        _args9 = arguments;\n      return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              query = _args9.length > 0 && _args9[0] !== undefined ? _args9[0] : {};\n              switchToEnvironment(http);\n              query = (0, _normalizeSelect.default)(query);\n              _context9.prev = 3;\n              _context9.next = 6;\n              return http.get('tags', (0, _contentfulSdkCore.createRequestConfig)({\n                query: query\n              }));\n            case 6:\n              response = _context9.sent;\n              return _context9.abrupt(\"return\", wrapTagCollection(response.data));\n            case 10:\n              _context9.prev = 10;\n              _context9.t0 = _context9[\"catch\"](3);\n              (0, _contentfulSdkCore.errorHandler)(_context9.t0);\n            case 13:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9, null, [[3, 10]]);\n    }));\n    return _getTags.apply(this, arguments);\n  }\n  function createAssetKey(_x5) {\n    return _createAssetKey.apply(this, arguments);\n  }\n  /**\r\n   * Gets a collection of Locale\r\n   * @memberof ContentfulClientAPI\r\n   * @param  {Object=} query - Object with search parameters. Check the <a href=\"https://www.contentful.com/developers/docs/javascript/tutorials/using-js-cda-sdk/#retrieving-entries-with-search-parameters\">JS SDK tutorial</a> and the <a href=\"https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/search-parameters\">REST API reference</a> for more details.\r\n   * @return {Promise<Entities.LocaleCollection>} Promise for a collection of Locale\r\n   * @example\r\n   * const contentful = require('contentful')\r\n   *\r\n   * const client = contentful.createClient({\r\n   *   space: '<space_id>',\r\n   *   accessToken: '<content_delivery_api_key>'\r\n   * })\r\n   *\r\n   * const response = await client.getLocales()\r\n   * console.log(response.items)\r\n   */\n  function _createAssetKey() {\n    _createAssetKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(expiresAt) {\n      var now, currentMaxLifetime, params, response;\n      return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              switchToEnvironment(http);\n              _context10.prev = 1;\n              now = Math.floor(Date.now() / 1000);\n              currentMaxLifetime = now + ASSET_KEY_MAX_LIFETIME;\n              (0, _validateTimestamp.default)('expiresAt', expiresAt, {\n                maximum: currentMaxLifetime,\n                now: now\n              });\n              params = {\n                expiresAt: expiresAt\n              };\n              _context10.next = 8;\n              return http.post('asset_keys', params);\n            case 8:\n              response = _context10.sent;\n              return _context10.abrupt(\"return\", wrapAssetKey(response.data));\n            case 12:\n              _context10.prev = 12;\n              _context10.t0 = _context10[\"catch\"](1);\n              (0, _contentfulSdkCore.errorHandler)(_context10.t0);\n            case 15:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10, null, [[1, 12]]);\n    }));\n    return _createAssetKey.apply(this, arguments);\n  }\n  function getLocales() {\n    return _getLocales.apply(this, arguments);\n  }\n  /**\r\n   * Synchronizes either all the content or only new content since last sync\r\n   * See <a href=\"https://www.contentful.com/developers/docs/concepts/sync/\">Synchronization</a> for more information.\r\n   * <strong> Important note: </strong> The the sync api endpoint does not support include or link resolution.\r\n   * However contentful.js is doing link resolution client side if you only make an initial sync.\r\n   * For the delta sync (using nextSyncToken) it is not possible since the sdk wont have access to all the data to make such an operation.\r\n   * @memberof ContentfulClientAPI\r\n   * @param  {Object} query - Query object for the sync call. One of initial or nextSyncToken always needs to be specified, but not both.\r\n   * @param  {boolean?} query.initial - Indicates if this is the first sync. Use it if you don't have a sync token.\r\n   * @param  {string?} query.nextSyncToken - The token you got the last time you used this method. Ensures you only get changed content.\r\n   * @param  {string=} query.type - Filter by this type (all (default), Entry, Asset, Deletion, DeletedAsset or DeletedEntry)\r\n   * @param  {string=} query.content_type - Filter by this content type id\r\n   * @param  {boolean=} query.resolveLinks - When true, links to other Entries or Assets are resolved. Default: true.\r\n   * @param  {Object} options\r\n   * @param  {boolean=} [options.paginate = true] - Set to false to disable pagination\r\n   * @return {Promise<Sync.SyncCollection>} Promise for the collection resulting of a sync operation\r\n   * @example\r\n   * const contentful = require('contentful')\r\n   *\r\n   * const client = contentful.createClient({\r\n   *   space: '<space_id>',\r\n   *   accessToken: '<content_delivery_api_key>'\r\n   * })\r\n   *\r\n   * const response = await client.sync({\r\n   *   initial: true\r\n   * })\r\n   * console.log({\r\n   *   entries: response.entries,\r\n   *   assets: response.assets,\r\n   *   nextSyncToken: response.nextSyncToken\r\n   * })\r\n   */\n  function _getLocales() {\n    _getLocales = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {\n      var query,\n        response,\n        _args11 = arguments;\n      return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              query = _args11.length > 0 && _args11[0] !== undefined ? _args11[0] : {};\n              switchToEnvironment(http);\n              _context11.prev = 2;\n              _context11.next = 5;\n              return http.get('locales', (0, _contentfulSdkCore.createRequestConfig)({\n                query: query\n              }));\n            case 5:\n              response = _context11.sent;\n              return _context11.abrupt(\"return\", wrapLocaleCollection(response.data));\n            case 9:\n              _context11.prev = 9;\n              _context11.t0 = _context11[\"catch\"](2);\n              (0, _contentfulSdkCore.errorHandler)(_context11.t0);\n            case 12:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11, null, [[2, 9]]);\n    }));\n    return _getLocales.apply(this, arguments);\n  }\n  function sync() {\n    return _sync.apply(this, arguments);\n  }\n  /**\r\n  * Parse raw json data into collection of entry objects.Links will be resolved also\r\n  * @memberof ContentfulClientAPI\r\n  * @param {Object} raw json data\r\n  * @example\r\n  * let data = {items: [\r\n  *    {\r\n  *    sys: {type: 'Entry', locale: 'en-US'},\r\n  *    fields: {\r\n  *      animal: {sys: {type: 'Link', linkType: 'Animal', id: 'oink'}},\r\n  *      anotheranimal: {sys: {type: 'Link', linkType: 'Animal', id: 'middle-parrot'}}\r\n  *    }\r\n  *  }\r\n  * ],\r\n  * includes: {\r\n  *  Animal: [\r\n  *    {\r\n  *      sys: {type: 'Animal', id: 'oink', locale: 'en-US'},\r\n  *      fields: {\r\n  *        name: 'Pig',\r\n  *        friend: {sys: {type: 'Link', linkType: 'Animal', id: 'groundhog'}}\r\n  *      }\r\n  *    }\r\n  *   ]\r\n  *  }\r\n  * }\r\n  * console.log( data.items[0].fields.foo ); // undefined\r\n  * let parsedData = client.parseEntries(data);\r\n  * console.log( parsedData.items[0].fields.foo ); // foo\r\n  */\n  function _sync() {\n    _sync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12() {\n      var query,\n        options,\n        _getGlobalOptions3,\n        resolveLinks,\n        removeUnresolved,\n        _args12 = arguments;\n      return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              query = _args12.length > 0 && _args12[0] !== undefined ? _args12[0] : {};\n              options = _args12.length > 1 && _args12[1] !== undefined ? _args12[1] : {\n                paginate: true\n              };\n              _getGlobalOptions3 = getGlobalOptions(query), resolveLinks = _getGlobalOptions3.resolveLinks, removeUnresolved = _getGlobalOptions3.removeUnresolved;\n              switchToEnvironment(http);\n              return _context12.abrupt(\"return\", (0, _pagedSync.default)(http, query, _objectSpread({\n                resolveLinks: resolveLinks,\n                removeUnresolved: removeUnresolved\n              }, options)));\n            case 5:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12);\n    }));\n    return _sync.apply(this, arguments);\n  }\n  function parseEntries(data) {\n    var _getGlobalOptions = getGlobalOptions({}),\n      resolveLinks = _getGlobalOptions.resolveLinks,\n      removeUnresolved = _getGlobalOptions.removeUnresolved;\n    return wrapEntryCollection(data, {\n      resolveLinks: resolveLinks,\n      removeUnresolved: removeUnresolved\n    });\n  }\n\n  /*\r\n   * Switches BaseURL to use /environments path\r\n   * */\n  function switchToEnvironment(http) {\n    http.defaults.baseURL = getGlobalOptions().environmentBaseUrl;\n  }\n\n  /*\r\n   * Switches BaseURL to use /spaces path\r\n   * */\n  function switchToSpace(http) {\n    http.defaults.baseURL = getGlobalOptions().spaceBaseUrl;\n  }\n  return {\n    getSpace: getSpace,\n    getContentType: getContentType,\n    getContentTypes: getContentTypes,\n    getEntry: getEntry,\n    getEntries: getEntries,\n    getAsset: getAsset,\n    getAssets: getAssets,\n    getTag: getTag,\n    getTags: getTags,\n    createAssetKey: createAssetKey,\n    getLocales: getLocales,\n    parseEntries: parseEntries,\n    sync: sync\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","createContentfulApi","_contentfulSdkCore","require","_entities","_interopRequireDefault","_pagedSync","_normalizeSelect","_validateTimestamp","obj","__esModule","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","ASSET_KEY_MAX_LIFETIME","_ref","http","getGlobalOptions","wrapSpace","space","contentType","wrapContentType","wrapContentTypeCollection","entry","wrapEntry","wrapEntryCollection","asset","wrapAsset","wrapAssetCollection","tag","wrapTag","wrapTagCollection","wrapAssetKey","assetKey","wrapLocaleCollection","locale","notFoundError","id","error","Error","sys","type","details","environment","getSpace","switchToSpace","get","response","data","errorHandler","getContentType","switchToEnvironment","getContentTypes","query","createRequestConfig","getEntry","getEntries","items","resolveLinks","removeUnresolved","getAsset","getAssets","getTag","getTags","createAssetKey","expiresAt","now","Math","floor","Date","currentMaxLifetime","maximum","params","post","getLocales","sync","options","paginate","parseEntries","defaults","baseURL","environmentBaseUrl","spaceBaseUrl"],"sources":["C:/Users/dms_2/Desktop/test/ADM-newSite/client/node_modules/contentful/dist/es-modules/create-contentful-api.js"],"sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = createContentfulApi;\r\nvar _contentfulSdkCore = require(\"contentful-sdk-core\");\r\nvar _entities = _interopRequireDefault(require(\"./entities\"));\r\nvar _pagedSync = _interopRequireDefault(require(\"./paged-sync\"));\r\nvar _normalizeSelect = _interopRequireDefault(require(\"./utils/normalize-select\"));\r\nvar _validateTimestamp = _interopRequireDefault(require(\"./utils/validate-timestamp\"));\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\r\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\r\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\r\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\r\nconst ASSET_KEY_MAX_LIFETIME = 48 * 60 * 60;\r\n\r\n/**\r\n * Creates API object with methods to access functionality from Contentful's\r\n * Delivery API\r\n * @private\r\n * @param {Object} params - API initialization params\r\n * @prop {Object} http - HTTP client instance\r\n * @prop {Object} entities - Object with wrapper methods for each kind of entity\r\n * @prop {Function} getGlobalOptions - Link resolver preconfigured with global setting\r\n * @return {ClientAPI}\r\n */\r\nfunction createContentfulApi(_ref) {\r\n  let {\r\n    http,\r\n    getGlobalOptions\r\n  } = _ref;\r\n  const {\r\n    wrapSpace\r\n  } = _entities.default.space;\r\n  const {\r\n    wrapContentType,\r\n    wrapContentTypeCollection\r\n  } = _entities.default.contentType;\r\n  const {\r\n    wrapEntry,\r\n    wrapEntryCollection\r\n  } = _entities.default.entry;\r\n  const {\r\n    wrapAsset,\r\n    wrapAssetCollection\r\n  } = _entities.default.asset;\r\n  const {\r\n    wrapTag,\r\n    wrapTagCollection\r\n  } = _entities.default.tag;\r\n  const {\r\n    wrapAssetKey\r\n  } = _entities.default.assetKey;\r\n  const {\r\n    wrapLocaleCollection\r\n  } = _entities.default.locale;\r\n  const notFoundError = id => {\r\n    const error = new Error('The resource could not be found.');\r\n    error.sys = {\r\n      type: 'Error',\r\n      id: 'NotFound'\r\n    };\r\n    error.details = {\r\n      type: 'Entry',\r\n      id: id,\r\n      environment: getGlobalOptions().environment,\r\n      space: getGlobalOptions().space\r\n    };\r\n    return error;\r\n  };\r\n\r\n  /**\r\n   * Gets the Space which the client is currently configured to use\r\n   * @memberof ContentfulClientAPI\r\n   * @return {Promise<Entities.Space>} Promise for a Space\r\n   * @example\r\n   * const contentful = require('contentful')\r\n   *\r\n   * const client = contentful.createClient({\r\n   *   space: '<space_id>',\r\n   *   accessToken: '<content_delivery_api_key>'\r\n   * })\r\n   * // returns the space object with the above <space-id>\r\n   * const space = await client.getSpace()\r\n   * console.log(space)\r\n   */\r\n  async function getSpace() {\r\n    switchToSpace(http);\r\n    try {\r\n      const response = await http.get('/');\r\n      return wrapSpace(response.data);\r\n    } catch (error) {\r\n      (0, _contentfulSdkCore.errorHandler)(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets a Content Type\r\n   * @memberof ContentfulClientAPI\r\n   * @param  {string} id\r\n   * @return {Promise<Entities.ContentType>} Promise for a Content Type\r\n   * @example\r\n   * const contentful = require('contentful')\r\n   *\r\n   * const client = contentful.createClient({\r\n   *   space: '<space_id>',\r\n   *   accessToken: '<content_delivery_api_key>'\r\n   * })\r\n   *\r\n   * const contentType = await client.getContentType('<content_type_id>')\r\n   * console.log(contentType)\r\n   */\r\n  async function getContentType(id) {\r\n    switchToEnvironment(http);\r\n    try {\r\n      const response = await http.get(`content_types/${id}`);\r\n      return wrapContentType(response.data);\r\n    } catch (error) {\r\n      (0, _contentfulSdkCore.errorHandler)(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets a collection of Content Types\r\n   * @memberof ContentfulClientAPI\r\n   * @param  {Object=} query - Object with search parameters. Check the <a href=\"https://www.contentful.com/developers/docs/javascript/tutorials/using-js-cda-sdk/#retrieving-entries-with-search-parameters\">JS SDK tutorial</a> and the <a href=\"https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/search-parameters\">REST API reference</a> for more details.\r\n   * @return {Promise<Entities.ContentTypeCollection>} Promise for a collection of Content Types\r\n   * @example\r\n   * const contentful = require('contentful')\r\n   *\r\n   * const client = contentful.createClient({\r\n   *   space: '<space_id>',\r\n   *   accessToken: '<content_delivery_api_key>'\r\n   * })\r\n   *\r\n   * const response = await client.getContentTypes()\r\n   * console.log(response.items)\r\n   */\r\n  async function getContentTypes() {\r\n    let query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n    switchToEnvironment(http);\r\n    try {\r\n      const response = await http.get('content_types', (0, _contentfulSdkCore.createRequestConfig)({\r\n        query: query\r\n      }));\r\n      return wrapContentTypeCollection(response.data);\r\n    } catch (error) {\r\n      (0, _contentfulSdkCore.errorHandler)(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets an Entry\r\n   * @memberof ContentfulClientAPI\r\n   * @param  {string} id\r\n   * @param  {Object=} query - Object with search parameters. In this method it's only useful for `locale`.\r\n   * @return {Promise<Entities.Entry>} Promise for an Entry\r\n   * @example\r\n   * const contentful = require('contentful')\r\n   *\r\n   * const client = contentful.createClient({\r\n   *   space: '<space_id>',\r\n   *   accessToken: '<content_delivery_api_key>'\r\n   * })\r\n   *\r\n   * const entry = await client.getEntry('<entry_id>')\r\n   * console.log(entry)\r\n   */\r\n  async function getEntry(id) {\r\n    let query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n    if (!id) {\r\n      throw notFoundError(id);\r\n    }\r\n    try {\r\n      const response = await this.getEntries(_objectSpread({\r\n        'sys.id': id\r\n      }, query));\r\n      if (response.items.length > 0) {\r\n        return wrapEntry(response.items[0]);\r\n      } else {\r\n        throw notFoundError(id);\r\n      }\r\n    } catch (error) {\r\n      (0, _contentfulSdkCore.errorHandler)(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets a collection of Entries\r\n   * @memberof ContentfulClientAPI\r\n   * @param  {Object=} query - Object with search parameters. Check the <a href=\"https://www.contentful.com/developers/docs/javascript/tutorials/using-js-cda-sdk/#retrieving-entries-with-search-parameters\">JS SDK tutorial</a> and the <a href=\"https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/search-parameters\">REST API reference</a> for more details.\r\n   * @return {Promise<Entities.EntryCollection>} Promise for a collection of Entries\r\n   * @example\r\n   * const contentful = require('contentful')\r\n   *\r\n   * const client = contentful.createClient({\r\n   *   space: '<space_id>',\r\n   *   accessToken: '<content_delivery_api_key>'\r\n   * })\r\n   *\r\n   * const response = await client.getEntries()\r\n   * console.log(response.items)\r\n   */\r\n  async function getEntries() {\r\n    let query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n    switchToEnvironment(http);\r\n    const {\r\n      resolveLinks,\r\n      removeUnresolved\r\n    } = getGlobalOptions(query);\r\n    query = (0, _normalizeSelect.default)(query);\r\n    try {\r\n      const response = await http.get('entries', (0, _contentfulSdkCore.createRequestConfig)({\r\n        query: query\r\n      }));\r\n      return wrapEntryCollection(response.data, {\r\n        resolveLinks,\r\n        removeUnresolved\r\n      });\r\n    } catch (error) {\r\n      (0, _contentfulSdkCore.errorHandler)(error);\r\n    }\r\n  }\r\n  /**\r\n   * Gets an Asset\r\n   * @memberof ContentfulClientAPI\r\n   * @param  {string} id\r\n   * @param  {Object=} query - Object with search parameters. In this method it's only useful for `locale`.\r\n   * @return {Promise<Entities.Asset>} Promise for an Asset\r\n   * @example\r\n   * const contentful = require('contentful')\r\n   *\r\n   * const client = contentful.createClient({\r\n   *   space: '<space_id>',\r\n   *   accessToken: '<content_delivery_api_key>'\r\n   * })\r\n   *\r\n   * const asset = await client.getAsset('<asset_id>')\r\n   * console.log(asset)\r\n   */\r\n  async function getAsset(id) {\r\n    let query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n    switchToEnvironment(http);\r\n    query = (0, _normalizeSelect.default)(query);\r\n    try {\r\n      const response = await http.get(`assets/${id}`, (0, _contentfulSdkCore.createRequestConfig)({\r\n        query: query\r\n      }));\r\n      return wrapAsset(response.data);\r\n    } catch (error) {\r\n      (0, _contentfulSdkCore.errorHandler)(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets a collection of Assets\r\n   * @memberof ContentfulClientAPI\r\n   * @param  {Object=} query - Object with search parameters. Check the <a href=\"https://www.contentful.com/developers/docs/javascript/tutorials/using-js-cda-sdk/#retrieving-entries-with-search-parameters\">JS SDK tutorial</a> and the <a href=\"https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/search-parameters\">REST API reference</a> for more details.\r\n   * @return {Promise<Entities.AssetCollection>} Promise for a collection of Assets\r\n   * @example\r\n   * const contentful = require('contentful')\r\n   *\r\n   * const client = contentful.createClient({\r\n   *   space: '<space_id>',\r\n   *   accessToken: '<content_delivery_api_key>'\r\n   * })\r\n   *\r\n   * const response = await client.getAssets()\r\n   * console.log(response.items)\r\n   */\r\n  async function getAssets() {\r\n    let query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n    switchToEnvironment(http);\r\n    query = (0, _normalizeSelect.default)(query);\r\n    try {\r\n      const response = await http.get('assets', (0, _contentfulSdkCore.createRequestConfig)({\r\n        query: query\r\n      }));\r\n      return wrapAssetCollection(response.data);\r\n    } catch (error) {\r\n      (0, _contentfulSdkCore.errorHandler)(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets a Tag\r\n   * @memberof ContentfulClientAPI\r\n   * @param  {string} id\r\n   * @return {Promise<Entities.Tag>} Promise for a Tag\r\n   * @example\r\n   * const contentful = require('contentful')\r\n   *\r\n   * const client = contentful.createClient({\r\n   *   space: '<space_id>',\r\n   *   accessToken: '<content_delivery_api_key>'\r\n   * })\r\n   *\r\n   * const tag = await client.getTag('<asset_id>')\r\n   * console.log(tag)\r\n   */\r\n  async function getTag(id) {\r\n    switchToEnvironment(http);\r\n    try {\r\n      const response = await http.get(`tags/${id}`);\r\n      return wrapTag(response.data);\r\n    } catch (error) {\r\n      (0, _contentfulSdkCore.errorHandler)(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets a collection of Tags\r\n   * @memberof ContentfulClientAPI\r\n   * @param  {Object=} query - Object with search parameters.\r\n   * @return {Promise<Entities.TagCollection>} Promise for a collection of Tags\r\n   * @example\r\n   * const contentful = require('contentful')\r\n   *\r\n   * const client = contentful.createClient({\r\n   *   space: '<space_id>',\r\n   *   accessToken: '<content_delivery_api_key>'\r\n   * })\r\n   *\r\n   * const response = await client.getTags()\r\n   * console.log(response.items)\r\n   */\r\n  async function getTags() {\r\n    let query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n    switchToEnvironment(http);\r\n    query = (0, _normalizeSelect.default)(query);\r\n    try {\r\n      const response = await http.get('tags', (0, _contentfulSdkCore.createRequestConfig)({\r\n        query: query\r\n      }));\r\n      return wrapTagCollection(response.data);\r\n    } catch (error) {\r\n      (0, _contentfulSdkCore.errorHandler)(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates an asset key for signing asset URLs (Embargoed Assets)\r\n   * @memberof ContentfulClientAPI\r\n   * @param {number} expiresAt - UNIX timestamp in the future, maximum of 48h from now\r\n   * @return {Promise<Entities.AssetKey>} Promise for an AssetKey\r\n   * @example\r\n   * const contentful = require('contentful')\r\n   *\r\n   * const client = contentful.createClient({\r\n   *   space: '<space_id>',\r\n   *   accessToken: '<content_delivery_api_key>'\r\n   * })\r\n   *\r\n   * const assetKey = await client.getAssetKey(<UNIX timestamp>)\r\n   * console.log(assetKey)\r\n   */\r\n  async function createAssetKey(expiresAt) {\r\n    switchToEnvironment(http);\r\n    try {\r\n      const now = Math.floor(Date.now() / 1000);\r\n      const currentMaxLifetime = now + ASSET_KEY_MAX_LIFETIME;\r\n      (0, _validateTimestamp.default)('expiresAt', expiresAt, {\r\n        maximum: currentMaxLifetime,\r\n        now\r\n      });\r\n      const params = {\r\n        expiresAt\r\n      };\r\n      const response = await http.post('asset_keys', params);\r\n      return wrapAssetKey(response.data);\r\n    } catch (error) {\r\n      (0, _contentfulSdkCore.errorHandler)(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets a collection of Locale\r\n   * @memberof ContentfulClientAPI\r\n   * @param  {Object=} query - Object with search parameters. Check the <a href=\"https://www.contentful.com/developers/docs/javascript/tutorials/using-js-cda-sdk/#retrieving-entries-with-search-parameters\">JS SDK tutorial</a> and the <a href=\"https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/search-parameters\">REST API reference</a> for more details.\r\n   * @return {Promise<Entities.LocaleCollection>} Promise for a collection of Locale\r\n   * @example\r\n   * const contentful = require('contentful')\r\n   *\r\n   * const client = contentful.createClient({\r\n   *   space: '<space_id>',\r\n   *   accessToken: '<content_delivery_api_key>'\r\n   * })\r\n   *\r\n   * const response = await client.getLocales()\r\n   * console.log(response.items)\r\n   */\r\n  async function getLocales() {\r\n    let query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n    switchToEnvironment(http);\r\n    try {\r\n      const response = await http.get('locales', (0, _contentfulSdkCore.createRequestConfig)({\r\n        query: query\r\n      }));\r\n      return wrapLocaleCollection(response.data);\r\n    } catch (error) {\r\n      (0, _contentfulSdkCore.errorHandler)(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Synchronizes either all the content or only new content since last sync\r\n   * See <a href=\"https://www.contentful.com/developers/docs/concepts/sync/\">Synchronization</a> for more information.\r\n   * <strong> Important note: </strong> The the sync api endpoint does not support include or link resolution.\r\n   * However contentful.js is doing link resolution client side if you only make an initial sync.\r\n   * For the delta sync (using nextSyncToken) it is not possible since the sdk wont have access to all the data to make such an operation.\r\n   * @memberof ContentfulClientAPI\r\n   * @param  {Object} query - Query object for the sync call. One of initial or nextSyncToken always needs to be specified, but not both.\r\n   * @param  {boolean?} query.initial - Indicates if this is the first sync. Use it if you don't have a sync token.\r\n   * @param  {string?} query.nextSyncToken - The token you got the last time you used this method. Ensures you only get changed content.\r\n   * @param  {string=} query.type - Filter by this type (all (default), Entry, Asset, Deletion, DeletedAsset or DeletedEntry)\r\n   * @param  {string=} query.content_type - Filter by this content type id\r\n   * @param  {boolean=} query.resolveLinks - When true, links to other Entries or Assets are resolved. Default: true.\r\n   * @param  {Object} options\r\n   * @param  {boolean=} [options.paginate = true] - Set to false to disable pagination\r\n   * @return {Promise<Sync.SyncCollection>} Promise for the collection resulting of a sync operation\r\n   * @example\r\n   * const contentful = require('contentful')\r\n   *\r\n   * const client = contentful.createClient({\r\n   *   space: '<space_id>',\r\n   *   accessToken: '<content_delivery_api_key>'\r\n   * })\r\n   *\r\n   * const response = await client.sync({\r\n   *   initial: true\r\n   * })\r\n   * console.log({\r\n   *   entries: response.entries,\r\n   *   assets: response.assets,\r\n   *   nextSyncToken: response.nextSyncToken\r\n   * })\r\n   */\r\n  async function sync() {\r\n    let query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\r\n      paginate: true\r\n    };\r\n    const {\r\n      resolveLinks,\r\n      removeUnresolved\r\n    } = getGlobalOptions(query);\r\n    switchToEnvironment(http);\r\n    return (0, _pagedSync.default)(http, query, _objectSpread({\r\n      resolveLinks,\r\n      removeUnresolved\r\n    }, options));\r\n  }\r\n\r\n  /**\r\n  * Parse raw json data into collection of entry objects.Links will be resolved also\r\n  * @memberof ContentfulClientAPI\r\n  * @param {Object} raw json data\r\n  * @example\r\n  * let data = {items: [\r\n  *    {\r\n  *    sys: {type: 'Entry', locale: 'en-US'},\r\n  *    fields: {\r\n  *      animal: {sys: {type: 'Link', linkType: 'Animal', id: 'oink'}},\r\n  *      anotheranimal: {sys: {type: 'Link', linkType: 'Animal', id: 'middle-parrot'}}\r\n  *    }\r\n  *  }\r\n  * ],\r\n  * includes: {\r\n  *  Animal: [\r\n  *    {\r\n  *      sys: {type: 'Animal', id: 'oink', locale: 'en-US'},\r\n  *      fields: {\r\n  *        name: 'Pig',\r\n  *        friend: {sys: {type: 'Link', linkType: 'Animal', id: 'groundhog'}}\r\n  *      }\r\n  *    }\r\n  *   ]\r\n  *  }\r\n  * }\r\n  * console.log( data.items[0].fields.foo ); // undefined\r\n  * let parsedData = client.parseEntries(data);\r\n  * console.log( parsedData.items[0].fields.foo ); // foo\r\n  */\r\n  function parseEntries(data) {\r\n    const {\r\n      resolveLinks,\r\n      removeUnresolved\r\n    } = getGlobalOptions({});\r\n    return wrapEntryCollection(data, {\r\n      resolveLinks,\r\n      removeUnresolved\r\n    });\r\n  }\r\n\r\n  /*\r\n   * Switches BaseURL to use /environments path\r\n   * */\r\n  function switchToEnvironment(http) {\r\n    http.defaults.baseURL = getGlobalOptions().environmentBaseUrl;\r\n  }\r\n\r\n  /*\r\n   * Switches BaseURL to use /spaces path\r\n   * */\r\n  function switchToSpace(http) {\r\n    http.defaults.baseURL = getGlobalOptions().spaceBaseUrl;\r\n  }\r\n  return {\r\n    getSpace,\r\n    getContentType,\r\n    getContentTypes,\r\n    getEntry,\r\n    getEntries,\r\n    getAsset,\r\n    getAssets,\r\n    getTag,\r\n    getTags,\r\n    createAssetKey,\r\n    getLocales,\r\n    parseEntries,\r\n    sync\r\n  };\r\n}"],"mappings":"AAAA,YAAY;;AAAC;AAAA;AAEbA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAGC,mBAAmB;AACrC,IAAIC,kBAAkB,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AACvD,IAAIC,SAAS,GAAGC,sBAAsB,CAACF,OAAO,CAAC,YAAY,CAAC,CAAC;AAC7D,IAAIG,UAAU,GAAGD,sBAAsB,CAACF,OAAO,CAAC,cAAc,CAAC,CAAC;AAChE,IAAII,gBAAgB,GAAGF,sBAAsB,CAACF,OAAO,CAAC,0BAA0B,CAAC,CAAC;AAClF,IAAIK,kBAAkB,GAAGH,sBAAsB,CAACF,OAAO,CAAC,4BAA4B,CAAC,CAAC;AACtF,SAASE,sBAAsB,CAACI,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAAET,OAAO,EAAES;EAAI,CAAC;AAAE;AAC9F,SAASE,OAAO,CAACC,MAAM,EAAEC,cAAc,EAAE;EAAE,IAAIC,IAAI,GAAGlB,MAAM,CAACkB,IAAI,CAACF,MAAM,CAAC;EAAE,IAAIhB,MAAM,CAACmB,qBAAqB,EAAE;IAAE,IAAIC,OAAO,GAAGpB,MAAM,CAACmB,qBAAqB,CAACH,MAAM,CAAC;IAAEC,cAAc,KAAKG,OAAO,GAAGA,OAAO,CAACC,MAAM,CAAC,UAAUC,GAAG,EAAE;MAAE,OAAOtB,MAAM,CAACuB,wBAAwB,CAACP,MAAM,EAAEM,GAAG,CAAC,CAACE,UAAU;IAAE,CAAC,CAAC,CAAC,EAAEN,IAAI,CAACO,IAAI,CAACC,KAAK,CAACR,IAAI,EAAEE,OAAO,CAAC;EAAE;EAAE,OAAOF,IAAI;AAAE;AACpV,SAASS,aAAa,CAACC,MAAM,EAAE;EAAE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;IAAE,IAAIG,MAAM,GAAG,IAAI,IAAIF,SAAS,CAACD,CAAC,CAAC,GAAGC,SAAS,CAACD,CAAC,CAAC,GAAG,CAAC,CAAC;IAAEA,CAAC,GAAG,CAAC,GAAGd,OAAO,CAACf,MAAM,CAACgC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,UAAUC,GAAG,EAAE;MAAEC,eAAe,CAACP,MAAM,EAAEM,GAAG,EAAEF,MAAM,CAACE,GAAG,CAAC,CAAC;IAAE,CAAC,CAAC,GAAGlC,MAAM,CAACoC,yBAAyB,GAAGpC,MAAM,CAACqC,gBAAgB,CAACT,MAAM,EAAE5B,MAAM,CAACoC,yBAAyB,CAACJ,MAAM,CAAC,CAAC,GAAGjB,OAAO,CAACf,MAAM,CAACgC,MAAM,CAAC,CAAC,CAACC,OAAO,CAAC,UAAUC,GAAG,EAAE;MAAElC,MAAM,CAACC,cAAc,CAAC2B,MAAM,EAAEM,GAAG,EAAElC,MAAM,CAACuB,wBAAwB,CAACS,MAAM,EAAEE,GAAG,CAAC,CAAC;IAAE,CAAC,CAAC;EAAE;EAAE,OAAON,MAAM;AAAE;AACzf,SAASO,eAAe,CAACtB,GAAG,EAAEqB,GAAG,EAAE/B,KAAK,EAAE;EAAE+B,GAAG,GAAGI,cAAc,CAACJ,GAAG,CAAC;EAAE,IAAIA,GAAG,IAAIrB,GAAG,EAAE;IAAEb,MAAM,CAACC,cAAc,CAACY,GAAG,EAAEqB,GAAG,EAAE;MAAE/B,KAAK,EAAEA,KAAK;MAAEqB,UAAU,EAAE,IAAI;MAAEe,YAAY,EAAE,IAAI;MAAEC,QAAQ,EAAE;IAAK,CAAC,CAAC;EAAE,CAAC,MAAM;IAAE3B,GAAG,CAACqB,GAAG,CAAC,GAAG/B,KAAK;EAAE;EAAE,OAAOU,GAAG;AAAE;AAC3O,SAASyB,cAAc,CAACG,GAAG,EAAE;EAAE,IAAIP,GAAG,GAAGQ,YAAY,CAACD,GAAG,EAAE,QAAQ,CAAC;EAAE,OAAO,OAAOP,GAAG,KAAK,QAAQ,GAAGA,GAAG,GAAGS,MAAM,CAACT,GAAG,CAAC;AAAE;AAC1H,SAASQ,YAAY,CAACE,KAAK,EAAEC,IAAI,EAAE;EAAE,IAAI,OAAOD,KAAK,KAAK,QAAQ,IAAIA,KAAK,KAAK,IAAI,EAAE,OAAOA,KAAK;EAAE,IAAIE,IAAI,GAAGF,KAAK,CAACG,MAAM,CAACC,WAAW,CAAC;EAAE,IAAIF,IAAI,KAAKG,SAAS,EAAE;IAAE,IAAIC,GAAG,GAAGJ,IAAI,CAACK,IAAI,CAACP,KAAK,EAAEC,IAAI,IAAI,SAAS,CAAC;IAAE,IAAI,OAAOK,GAAG,KAAK,QAAQ,EAAE,OAAOA,GAAG;IAAE,MAAM,IAAIE,SAAS,CAAC,8CAA8C,CAAC;EAAE;EAAE,OAAO,CAACP,IAAI,KAAK,QAAQ,GAAGF,MAAM,GAAGU,MAAM,EAAET,KAAK,CAAC;AAAE;AACxX,IAAMU,sBAAsB,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASjD,mBAAmB,CAACkD,IAAI,EAAE;EACjC,IACEC,IAAI,GAEFD,IAAI,CAFNC,IAAI;IACJC,gBAAgB,GACdF,IAAI,CADNE,gBAAgB;EAElB,IACEC,SAAS,GACPlD,SAAS,CAACJ,OAAO,CAACuD,KAAK,CADzBD,SAAS;EAEX,4BAGIlD,SAAS,CAACJ,OAAO,CAACwD,WAAW;IAF/BC,eAAe,yBAAfA,eAAe;IACfC,yBAAyB,yBAAzBA,yBAAyB;EAE3B,4BAGItD,SAAS,CAACJ,OAAO,CAAC2D,KAAK;IAFzBC,SAAS,yBAATA,SAAS;IACTC,mBAAmB,yBAAnBA,mBAAmB;EAErB,4BAGIzD,SAAS,CAACJ,OAAO,CAAC8D,KAAK;IAFzBC,SAAS,yBAATA,SAAS;IACTC,mBAAmB,yBAAnBA,mBAAmB;EAErB,4BAGI5D,SAAS,CAACJ,OAAO,CAACiE,GAAG;IAFvBC,OAAO,yBAAPA,OAAO;IACPC,iBAAiB,yBAAjBA,iBAAiB;EAEnB,IACEC,YAAY,GACVhE,SAAS,CAACJ,OAAO,CAACqE,QAAQ,CAD5BD,YAAY;EAEd,IACEE,oBAAoB,GAClBlE,SAAS,CAACJ,OAAO,CAACuE,MAAM,CAD1BD,oBAAoB;EAEtB,IAAME,aAAa,GAAG,SAAhBA,aAAa,CAAGC,EAAE,EAAI;IAC1B,IAAMC,KAAK,GAAG,IAAIC,KAAK,CAAC,kCAAkC,CAAC;IAC3DD,KAAK,CAACE,GAAG,GAAG;MACVC,IAAI,EAAE,OAAO;MACbJ,EAAE,EAAE;IACN,CAAC;IACDC,KAAK,CAACI,OAAO,GAAG;MACdD,IAAI,EAAE,OAAO;MACbJ,EAAE,EAAEA,EAAE;MACNM,WAAW,EAAE1B,gBAAgB,EAAE,CAAC0B,WAAW;MAC3CxB,KAAK,EAAEF,gBAAgB,EAAE,CAACE;IAC5B,CAAC;IACD,OAAOmB,KAAK;EACd,CAAC;;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAdE,SAeeM,QAAQ;IAAA;EAAA;EAUvB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAfE;IAAA,uEAVA;MAAA;MAAA;QAAA;UAAA;YAAA;cACEC,aAAa,CAAC7B,IAAI,CAAC;cAAC;cAAA;cAAA,OAEKA,IAAI,CAAC8B,GAAG,CAAC,GAAG,CAAC;YAAA;cAA9BC,QAAQ;cAAA,iCACP7B,SAAS,CAAC6B,QAAQ,CAACC,IAAI,CAAC;YAAA;cAAA;cAAA;cAE/B,CAAC,CAAC,EAAElF,kBAAkB,CAACmF,YAAY,cAAQ;YAAC;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAE/C;IAAA;EAAA;EAAA,SAkBcC,cAAc;IAAA;EAAA;EAU7B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAfE;IAAA,6EAVA,kBAA8Bb,EAAE;MAAA;MAAA;QAAA;UAAA;YAAA;cAC9Bc,mBAAmB,CAACnC,IAAI,CAAC;cAAC;cAAA;cAAA,OAEDA,IAAI,CAAC8B,GAAG,yBAAkBT,EAAE,EAAG;YAAA;cAAhDU,QAAQ;cAAA,kCACP1B,eAAe,CAAC0B,QAAQ,CAACC,IAAI,CAAC;YAAA;cAAA;cAAA;cAErC,CAAC,CAAC,EAAElF,kBAAkB,CAACmF,YAAY,eAAQ;YAAC;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAE/C;IAAA;EAAA;EAAA,SAkBcG,eAAe;IAAA;EAAA;EAa9B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAhBE;IAAA,8EAbA;MAAA;QAAA;QAAA;MAAA;QAAA;UAAA;YAAA;cACMC,KAAK,GAAG,OAAU9D,MAAM,GAAG,CAAC,IAAI,OAAU,CAAC,CAAC,KAAKkB,SAAS,GAAG,OAAU,CAAC,CAAC,GAAG,CAAC,CAAC;cAClF0C,mBAAmB,CAACnC,IAAI,CAAC;cAAC;cAAA;cAAA,OAEDA,IAAI,CAAC8B,GAAG,CAAC,eAAe,EAAE,CAAC,CAAC,EAAEhF,kBAAkB,CAACwF,mBAAmB,EAAE;gBAC3FD,KAAK,EAAEA;cACT,CAAC,CAAC,CAAC;YAAA;cAFGN,QAAQ;cAAA,kCAGPzB,yBAAyB,CAACyB,QAAQ,CAACC,IAAI,CAAC;YAAA;cAAA;cAAA;cAE/C,CAAC,CAAC,EAAElF,kBAAkB,CAACmF,YAAY,eAAQ;YAAC;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAE/C;IAAA;EAAA;EAAA,SAmBcM,QAAQ;IAAA;EAAA;EAmBvB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAfE;IAAA,uEAnBA,kBAAwBlB,EAAE;MAAA;QAAA;QAAA;MAAA;QAAA;UAAA;YAAA;cACpBgB,KAAK,GAAG,OAAU9D,MAAM,GAAG,CAAC,IAAI,OAAU,CAAC,CAAC,KAAKkB,SAAS,GAAG,OAAU,CAAC,CAAC,GAAG,CAAC,CAAC;cAAA,IAC7E4B,EAAE;gBAAA;gBAAA;cAAA;cAAA,MACCD,aAAa,CAACC,EAAE,CAAC;YAAA;cAAA;cAAA;cAAA,OAGA,IAAI,CAACmB,UAAU,CAACrE,aAAa,CAAC;gBACnD,QAAQ,EAAEkD;cACZ,CAAC,EAAEgB,KAAK,CAAC,CAAC;YAAA;cAFJN,QAAQ;cAAA,MAGVA,QAAQ,CAACU,KAAK,CAAClE,MAAM,GAAG,CAAC;gBAAA;gBAAA;cAAA;cAAA,kCACpBiC,SAAS,CAACuB,QAAQ,CAACU,KAAK,CAAC,CAAC,CAAC,CAAC;YAAA;cAAA,MAE7BrB,aAAa,CAACC,EAAE,CAAC;YAAA;cAAA;cAAA;YAAA;cAAA;cAAA;cAGzB,CAAC,CAAC,EAAEvE,kBAAkB,CAACmF,YAAY,eAAQ;YAAC;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAE/C;IAAA;EAAA;EAAA,SAkBcO,UAAU;IAAA;EAAA;EAoBzB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAhBE;IAAA,yEApBA;MAAA;QAAA;QAAA;QAAA;QAAA;QAAA;MAAA;QAAA;UAAA;YAAA;cACMH,KAAK,GAAG,OAAU9D,MAAM,GAAG,CAAC,IAAI,OAAU,CAAC,CAAC,KAAKkB,SAAS,GAAG,OAAU,CAAC,CAAC,GAAG,CAAC,CAAC;cAClF0C,mBAAmB,CAACnC,IAAI,CAAC;cAAC,qBAItBC,gBAAgB,CAACoC,KAAK,CAAC,EAFzBK,YAAY,sBAAZA,YAAY,EACZC,gBAAgB,sBAAhBA,gBAAgB;cAElBN,KAAK,GAAG,CAAC,CAAC,EAAElF,gBAAgB,CAACP,OAAO,EAAEyF,KAAK,CAAC;cAAC;cAAA;cAAA,OAEpBrC,IAAI,CAAC8B,GAAG,CAAC,SAAS,EAAE,CAAC,CAAC,EAAEhF,kBAAkB,CAACwF,mBAAmB,EAAE;gBACrFD,KAAK,EAAEA;cACT,CAAC,CAAC,CAAC;YAAA;cAFGN,QAAQ;cAAA,kCAGPtB,mBAAmB,CAACsB,QAAQ,CAACC,IAAI,EAAE;gBACxCU,YAAY,EAAZA,YAAY;gBACZC,gBAAgB,EAAhBA;cACF,CAAC,CAAC;YAAA;cAAA;cAAA;cAEF,CAAC,CAAC,EAAE7F,kBAAkB,CAACmF,YAAY,eAAQ;YAAC;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAE/C;IAAA;EAAA;EAAA,SAkBcW,QAAQ;IAAA;EAAA;EAcvB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAfE;IAAA,uEAdA,kBAAwBvB,EAAE;MAAA;QAAA;QAAA;MAAA;QAAA;UAAA;YAAA;cACpBgB,KAAK,GAAG,OAAU9D,MAAM,GAAG,CAAC,IAAI,OAAU,CAAC,CAAC,KAAKkB,SAAS,GAAG,OAAU,CAAC,CAAC,GAAG,CAAC,CAAC;cAClF0C,mBAAmB,CAACnC,IAAI,CAAC;cACzBqC,KAAK,GAAG,CAAC,CAAC,EAAElF,gBAAgB,CAACP,OAAO,EAAEyF,KAAK,CAAC;cAAC;cAAA;cAAA,OAEpBrC,IAAI,CAAC8B,GAAG,kBAAWT,EAAE,GAAI,CAAC,CAAC,EAAEvE,kBAAkB,CAACwF,mBAAmB,EAAE;gBAC1FD,KAAK,EAAEA;cACT,CAAC,CAAC,CAAC;YAAA;cAFGN,QAAQ;cAAA,kCAGPpB,SAAS,CAACoB,QAAQ,CAACC,IAAI,CAAC;YAAA;cAAA;cAAA;cAE/B,CAAC,CAAC,EAAElF,kBAAkB,CAACmF,YAAY,eAAQ;YAAC;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAE/C;IAAA;EAAA;EAAA,SAkBcY,SAAS;IAAA;EAAA;EAcxB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAfE;IAAA,wEAdA;MAAA;QAAA;QAAA;MAAA;QAAA;UAAA;YAAA;cACMR,KAAK,GAAG,OAAU9D,MAAM,GAAG,CAAC,IAAI,OAAU,CAAC,CAAC,KAAKkB,SAAS,GAAG,OAAU,CAAC,CAAC,GAAG,CAAC,CAAC;cAClF0C,mBAAmB,CAACnC,IAAI,CAAC;cACzBqC,KAAK,GAAG,CAAC,CAAC,EAAElF,gBAAgB,CAACP,OAAO,EAAEyF,KAAK,CAAC;cAAC;cAAA;cAAA,OAEpBrC,IAAI,CAAC8B,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAEhF,kBAAkB,CAACwF,mBAAmB,EAAE;gBACpFD,KAAK,EAAEA;cACT,CAAC,CAAC,CAAC;YAAA;cAFGN,QAAQ;cAAA,kCAGPnB,mBAAmB,CAACmB,QAAQ,CAACC,IAAI,CAAC;YAAA;cAAA;cAAA;cAEzC,CAAC,CAAC,EAAElF,kBAAkB,CAACmF,YAAY,eAAQ;YAAC;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAE/C;IAAA;EAAA;EAAA,SAkBca,MAAM;IAAA;EAAA;EAUrB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAfE;IAAA,qEAVA,kBAAsBzB,EAAE;MAAA;MAAA;QAAA;UAAA;YAAA;cACtBc,mBAAmB,CAACnC,IAAI,CAAC;cAAC;cAAA;cAAA,OAEDA,IAAI,CAAC8B,GAAG,gBAAST,EAAE,EAAG;YAAA;cAAvCU,QAAQ;cAAA,kCACPjB,OAAO,CAACiB,QAAQ,CAACC,IAAI,CAAC;YAAA;cAAA;cAAA;cAE7B,CAAC,CAAC,EAAElF,kBAAkB,CAACmF,YAAY,eAAQ;YAAC;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAE/C;IAAA;EAAA;EAAA,SAkBcc,OAAO;IAAA;EAAA;EActB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAfE;IAAA,sEAdA;MAAA;QAAA;QAAA;MAAA;QAAA;UAAA;YAAA;cACMV,KAAK,GAAG,OAAU9D,MAAM,GAAG,CAAC,IAAI,OAAU,CAAC,CAAC,KAAKkB,SAAS,GAAG,OAAU,CAAC,CAAC,GAAG,CAAC,CAAC;cAClF0C,mBAAmB,CAACnC,IAAI,CAAC;cACzBqC,KAAK,GAAG,CAAC,CAAC,EAAElF,gBAAgB,CAACP,OAAO,EAAEyF,KAAK,CAAC;cAAC;cAAA;cAAA,OAEpBrC,IAAI,CAAC8B,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,EAAEhF,kBAAkB,CAACwF,mBAAmB,EAAE;gBAClFD,KAAK,EAAEA;cACT,CAAC,CAAC,CAAC;YAAA;cAFGN,QAAQ;cAAA,kCAGPhB,iBAAiB,CAACgB,QAAQ,CAACC,IAAI,CAAC;YAAA;cAAA;cAAA;cAEvC,CAAC,CAAC,EAAElF,kBAAkB,CAACmF,YAAY,eAAQ;YAAC;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAE/C;IAAA;EAAA;EAAA,SAkBce,cAAc;IAAA;EAAA;EAmB7B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAfE;IAAA,6EAnBA,mBAA8BC,SAAS;MAAA;MAAA;QAAA;UAAA;YAAA;cACrCd,mBAAmB,CAACnC,IAAI,CAAC;cAAC;cAElBkD,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACH,GAAG,EAAE,GAAG,IAAI,CAAC;cACnCI,kBAAkB,GAAGJ,GAAG,GAAGpD,sBAAsB;cACvD,CAAC,CAAC,EAAE1C,kBAAkB,CAACR,OAAO,EAAE,WAAW,EAAEqG,SAAS,EAAE;gBACtDM,OAAO,EAAED,kBAAkB;gBAC3BJ,GAAG,EAAHA;cACF,CAAC,CAAC;cACIM,MAAM,GAAG;gBACbP,SAAS,EAATA;cACF,CAAC;cAAA;cAAA,OACsBjD,IAAI,CAACyD,IAAI,CAAC,YAAY,EAAED,MAAM,CAAC;YAAA;cAAhDzB,QAAQ;cAAA,mCACPf,YAAY,CAACe,QAAQ,CAACC,IAAI,CAAC;YAAA;cAAA;cAAA;cAElC,CAAC,CAAC,EAAElF,kBAAkB,CAACmF,YAAY,gBAAQ;YAAC;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAE/C;IAAA;EAAA;EAAA,SAkBcyB,UAAU;IAAA;EAAA;EAazB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAhCE;IAAA,yEAbA;MAAA;QAAA;QAAA;MAAA;QAAA;UAAA;YAAA;cACMrB,KAAK,GAAG,QAAU9D,MAAM,GAAG,CAAC,IAAI,QAAU,CAAC,CAAC,KAAKkB,SAAS,GAAG,QAAU,CAAC,CAAC,GAAG,CAAC,CAAC;cAClF0C,mBAAmB,CAACnC,IAAI,CAAC;cAAC;cAAA;cAAA,OAEDA,IAAI,CAAC8B,GAAG,CAAC,SAAS,EAAE,CAAC,CAAC,EAAEhF,kBAAkB,CAACwF,mBAAmB,EAAE;gBACrFD,KAAK,EAAEA;cACT,CAAC,CAAC,CAAC;YAAA;cAFGN,QAAQ;cAAA,mCAGPb,oBAAoB,CAACa,QAAQ,CAACC,IAAI,CAAC;YAAA;cAAA;cAAA;cAE1C,CAAC,CAAC,EAAElF,kBAAkB,CAACmF,YAAY,gBAAQ;YAAC;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAE/C;IAAA;EAAA;EAAA,SAmCc0B,IAAI;IAAA;EAAA;EAgBnB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EA7BE;IAAA,mEAhBA;MAAA;QAAA;QAAA;QAAA;QAAA;QAAA;MAAA;QAAA;UAAA;YAAA;cACMtB,KAAK,GAAG,QAAU9D,MAAM,GAAG,CAAC,IAAI,QAAU,CAAC,CAAC,KAAKkB,SAAS,GAAG,QAAU,CAAC,CAAC,GAAG,CAAC,CAAC;cAC9EmE,OAAO,GAAG,QAAUrF,MAAM,GAAG,CAAC,IAAI,QAAU,CAAC,CAAC,KAAKkB,SAAS,GAAG,QAAU,CAAC,CAAC,GAAG;gBAChFoE,QAAQ,EAAE;cACZ,CAAC;cAAA,qBAIG5D,gBAAgB,CAACoC,KAAK,CAAC,EAFzBK,YAAY,sBAAZA,YAAY,EACZC,gBAAgB,sBAAhBA,gBAAgB;cAElBR,mBAAmB,CAACnC,IAAI,CAAC;cAAC,mCACnB,CAAC,CAAC,EAAE9C,UAAU,CAACN,OAAO,EAAEoD,IAAI,EAAEqC,KAAK,EAAElE,aAAa,CAAC;gBACxDuE,YAAY,EAAZA,YAAY;gBACZC,gBAAgB,EAAhBA;cACF,CAAC,EAAEiB,OAAO,CAAC,CAAC;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CACb;IAAA;EAAA;EAgCD,SAASE,YAAY,CAAC9B,IAAI,EAAE;IAC1B,wBAGI/B,gBAAgB,CAAC,CAAC,CAAC,CAAC;MAFtByC,YAAY,qBAAZA,YAAY;MACZC,gBAAgB,qBAAhBA,gBAAgB;IAElB,OAAOlC,mBAAmB,CAACuB,IAAI,EAAE;MAC/BU,YAAY,EAAZA,YAAY;MACZC,gBAAgB,EAAhBA;IACF,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;EACE,SAASR,mBAAmB,CAACnC,IAAI,EAAE;IACjCA,IAAI,CAAC+D,QAAQ,CAACC,OAAO,GAAG/D,gBAAgB,EAAE,CAACgE,kBAAkB;EAC/D;;EAEA;AACF;AACA;EACE,SAASpC,aAAa,CAAC7B,IAAI,EAAE;IAC3BA,IAAI,CAAC+D,QAAQ,CAACC,OAAO,GAAG/D,gBAAgB,EAAE,CAACiE,YAAY;EACzD;EACA,OAAO;IACLtC,QAAQ,EAARA,QAAQ;IACRM,cAAc,EAAdA,cAAc;IACdE,eAAe,EAAfA,eAAe;IACfG,QAAQ,EAARA,QAAQ;IACRC,UAAU,EAAVA,UAAU;IACVI,QAAQ,EAARA,QAAQ;IACRC,SAAS,EAATA,SAAS;IACTC,MAAM,EAANA,MAAM;IACNC,OAAO,EAAPA,OAAO;IACPC,cAAc,EAAdA,cAAc;IACdU,UAAU,EAAVA,UAAU;IACVI,YAAY,EAAZA,YAAY;IACZH,IAAI,EAAJA;EACF,CAAC;AACH"},"metadata":{},"sourceType":"script","externalDependencies":[]}