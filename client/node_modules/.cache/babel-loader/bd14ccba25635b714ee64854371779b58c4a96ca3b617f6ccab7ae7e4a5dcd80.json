{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = normalizeSelect;\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\n/*\r\n* sdk relies heavily on sys metadata\r\n* so we cannot omit the sys property on sdk level entirely\r\n* and we have to ensure that at least `id` and `type` are present\r\n* */\n\nfunction normalizeSelect(query) {\n  if (!query.select) {\n    return query;\n  }\n\n  // The selection of fields for the query is limited\n  // Get the different parts that are listed for selection\n  const allSelects = Array.isArray(query.select) ? query.select : query.select.split(',');\n  // Move the parts into a set for easy access and deduplication\n  const selectedSet = new Set(allSelects);\n\n  // If we already select all of `sys` we can just return\n  // since we're anyway fetching everything that is needed\n  if (selectedSet.has('sys')) {\n    return query;\n  }\n\n  // We don't select `sys` so we need to ensure the minimum set\n  selectedSet.add('sys.id');\n  selectedSet.add('sys.type');\n\n  // Reassign the normalized sys properties\n  return _objectSpread(_objectSpread({}, query), {}, {\n    select: [...selectedSet].join(',')\n  });\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","normalizeSelect","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","obj","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","query","select","allSelects","Array","isArray","split","selectedSet","Set","has","add","join"],"sources":["C:/Users/Aaron Ormerod/Desktop/ADM-newSite/client/node_modules/contentful/dist/es-modules/utils/normalize-select.js"],"sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = normalizeSelect;\r\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\r\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\r\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\r\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\r\n/*\r\n* sdk relies heavily on sys metadata\r\n* so we cannot omit the sys property on sdk level entirely\r\n* and we have to ensure that at least `id` and `type` are present\r\n* */\r\n\r\nfunction normalizeSelect(query) {\r\n  if (!query.select) {\r\n    return query;\r\n  }\r\n\r\n  // The selection of fields for the query is limited\r\n  // Get the different parts that are listed for selection\r\n  const allSelects = Array.isArray(query.select) ? query.select : query.select.split(',');\r\n  // Move the parts into a set for easy access and deduplication\r\n  const selectedSet = new Set(allSelects);\r\n\r\n  // If we already select all of `sys` we can just return\r\n  // since we're anyway fetching everything that is needed\r\n  if (selectedSet.has('sys')) {\r\n    return query;\r\n  }\r\n\r\n  // We don't select `sys` so we need to ensure the minimum set\r\n  selectedSet.add('sys.id');\r\n  selectedSet.add('sys.type');\r\n\r\n  // Reassign the normalized sys properties\r\n  return _objectSpread(_objectSpread({}, query), {}, {\r\n    select: [...selectedSet].join(',')\r\n  });\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}