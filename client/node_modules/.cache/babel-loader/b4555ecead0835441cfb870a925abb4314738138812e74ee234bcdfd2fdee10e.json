{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dms_2\\\\Documents\\\\AddMustard-repos\\\\addMusatrd\\\\client\\\\src\\\\Components\\\\Cards\\\\SlideCarouselBlogCard.tsx\";\n/*\r\n    Project : AddMustard\r\n    Author(s) : David Charles\r\n*/\n\n//Dependencies\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n//Componenets\n\nimport ImageContainer from \"../ImageContainers/ImageContainer\";\nimport Tilt from \"../Tilt/Tilt\";\n\n//Styles\nimport \"./Cards.scss\";\n\n//Interfaces\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n//Component\nconst SlideCarouselBlogCard = props => {\n  //Properties\n  const cardClass = props.data.cardClass;\n  const cardLogoImage = props.data.cardLogoImage;\n  const cardImage = props.data.cardImage;\n  const cardImageAlt = props.data.cardImageAlt;\n  const cardLinkType = props.data.cardLinkType;\n  const cardLinkHref = props.data.cardLinkHref || \"\";\n  const cardBackgroundColor = props.data.cardBackgroundColor || \"\";\n\n  //Fucntions\n  const generateBlogCardContent = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contentContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"imageParent\",\n          children: [cardLogoImage ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"logoContainer\",\n            children: /*#__PURE__*/_jsxDEV(ImageContainer, {\n              data: {\n                imageSource: cardLogoImage\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), cardImage ? /*#__PURE__*/_jsxDEV(ImageContainer, {\n            data: {\n              imageSource: cardImage,\n              imageAlt: cardImageAlt,\n              imageHrefType: \"externalLink\",\n              imageHref: \"\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tilt, {\n          data: {\n            maxRotation: 1,\n            maxSkew: 2,\n            backgroundColor: cardBackgroundColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), cardImage ? /*#__PURE__*/_jsxDEV(ImageContainer, {\n          data: {\n            imageSource: cardImage,\n            imageAlt: cardImageAlt,\n            imageHrefType: \"externalLink\",\n            imageHref: \"\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner\",\n          children: props.children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  };\n  const generateBlogCardInterior = () => {\n    if (cardLinkHref) {\n      if (cardLinkType === \"internalLink\") {\n        return /*#__PURE__*/_jsxDEV(Link, {\n          className: innerClassName,\n          to: cardLinkHref,\n          children: generateBlogCardContent()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this);\n      } else if (cardLinkType === \"externalLink\") {\n        return /*#__PURE__*/_jsxDEV(\"a\", {\n          className: innerClassName,\n          href: cardLinkHref,\n          rel: \"noreferrer\",\n          target: \"_blank\",\n          children: generateBlogCardContent()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this);\n      }\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: innerClassName,\n      children: generateBlogCardContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this);\n  };\n\n  //Variables\n  const SlideCarouselBlogCardClass = cardClass ? \"SlideCarouselBlogCard \" + cardClass : \"SlideCarouselBlogCard\";\n  const innerClassName = cardImage ? \"inner withImage\" : \"inner\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: SlideCarouselBlogCardClass,\n    children: generateBlogCardInterior()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n};\n_c = SlideCarouselBlogCard;\nexport default SlideCarouselBlogCard;\nvar _c;\n$RefreshReg$(_c, \"SlideCarouselBlogCard\");","map":{"version":3,"names":["React","Link","ImageContainer","Tilt","SlideCarouselBlogCard","props","cardClass","data","cardLogoImage","cardImage","cardImageAlt","cardLinkType","cardLinkHref","cardBackgroundColor","generateBlogCardContent","imageSource","imageAlt","imageHrefType","imageHref","maxRotation","maxSkew","backgroundColor","children","generateBlogCardInterior","innerClassName","SlideCarouselBlogCardClass"],"sources":["C:/Users/dms_2/Documents/AddMustard-repos/addMusatrd/client/src/Components/Cards/SlideCarouselBlogCard.tsx"],"sourcesContent":["/*\r\n    Project : AddMustard\r\n    Author(s) : David Charles\r\n*/\r\n\r\n//Dependencies\r\nimport React from \"react\";\r\nimport { Link, LinkProps } from \"react-router-dom\";\r\n\r\n//Componenets\r\nimport TiltButton from \"../Buttons/TiltButton\";\r\nimport ImageContainer from \"../ImageContainers/ImageContainer\";\r\nimport Tilt from \"../Tilt/Tilt\";\r\n\r\n//Styles\r\nimport \"./Cards.scss\";\r\n\r\n//Interfaces\r\nimport { SlideCarouselBlogCardInterface } from \"./CardInterfaces\"; \r\n\r\n//Component\r\nconst SlideCarouselBlogCard : React.FC<SlideCarouselBlogCardInterface> = (props : SlideCarouselBlogCardInterface) => {\r\n    //Properties\r\n    const cardClass : string | undefined = props.data.cardClass; \r\n    const cardLogoImage : string | undefined = props.data.cardLogoImage;\r\n    const cardImage : string | undefined = props.data.cardImage;\r\n    const cardImageAlt : string | undefined = props.data.cardImageAlt;\r\n    const cardLinkType : string | undefined = props.data.cardLinkType;\r\n    const cardLinkHref : string | LinkProps[\"to\"] = props.data.cardLinkHref || \"\";\r\n    const cardBackgroundColor : string | undefined = props.data.cardBackgroundColor || \"\";\r\n\r\n    //Fucntions\r\n    const generateBlogCardContent : () => JSX.Element = () => {\r\n        return (\r\n            <>\r\n                <div className=\"contentContainer\">\r\n                    <div className=\"imageParent\">\r\n                    {\r\n                        cardLogoImage ?\r\n                            <div className=\"logoContainer\">\r\n                                <ImageContainer data={{ imageSource: cardLogoImage }} />\r\n                            </div>\r\n                            :\r\n                            <></>\r\n                    }\r\n\r\n                    {\r\n                        cardImage ?\r\n                            <ImageContainer data={{ imageSource: cardImage, imageAlt: cardImageAlt, imageHrefType : \"externalLink\", imageHref: \"\" }} />\r\n                            :\r\n                            <></>\r\n                    }\r\n                    </div>\r\n                    <Tilt data={{ maxRotation : 1, maxSkew : 2, backgroundColor : cardBackgroundColor }} />\r\n\r\n                    {\r\n                        cardImage ?\r\n                            <ImageContainer data={{ imageSource: cardImage, imageAlt: cardImageAlt, imageHrefType : \"externalLink\", imageHref: \"\" }} />\r\n                            :\r\n                            <></>\r\n                    }\r\n\r\n                    <div className=\"inner\">\r\n                        { props.children }\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    };\r\n    const generateBlogCardInterior : () => JSX.Element = () => {\r\n        if (cardLinkHref) {\r\n            if (cardLinkType === \"internalLink\") {\r\n                return (\r\n                    <Link className={innerClassName} to={cardLinkHref}>\r\n                        { generateBlogCardContent() }\r\n                    </Link>\r\n                )\r\n\r\n            } else if (cardLinkType === \"externalLink\") {\r\n                return (\r\n                    <a className={innerClassName} href={cardLinkHref} rel=\"noreferrer\" target=\"_blank\">\r\n                        { generateBlogCardContent() }\r\n                    </a>\r\n                )\r\n\r\n            }\r\n        }\r\n        \r\n        return (\r\n            <div className={innerClassName}>\r\n                { generateBlogCardContent() }\r\n            </div>\r\n        )\r\n    };\r\n\r\n    //Variables\r\n    const SlideCarouselBlogCardClass : string = cardClass ? \"SlideCarouselBlogCard \" + cardClass : \"SlideCarouselBlogCard\";\r\n    const innerClassName : string = cardImage ? \"inner withImage\" : \"inner\";\r\n\r\n    return (\r\n        <div className={SlideCarouselBlogCardClass}>\r\n            { generateBlogCardInterior () }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SlideCarouselBlogCard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}