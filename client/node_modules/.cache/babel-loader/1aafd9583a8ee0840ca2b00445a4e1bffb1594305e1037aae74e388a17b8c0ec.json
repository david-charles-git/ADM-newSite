{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dms_2\\\\Documents\\\\AddMustard-repos\\\\addMusatrd\\\\client\\\\src\\\\Components\\\\Buttons\\\\Button.tsx\";\n/*\n    Project : AddMustard\n    Author(s) : David Charles\n*/\n\n//Dependencies\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n//Components\nimport ImageContainer from \"../ImageContainer/ImageContainer\";\n\n//Interfaces\n\n//Styles\nimport \"./Button.scss\";\n\n//Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Button = props => {\n  //Properties\n  const buttonClass = props.data.buttonClass;\n  const buttonCopy = props.data.buttonCopy;\n  const buttonIcon = props.data.buttonIcon;\n  const buttonType = props.data.buttonType;\n  const buttonHref = props.data.buttonHref || \"\";\n  const buttonFunction = props.data.buttonFunction;\n\n  //Functions\n  const generateButton = () => {\n    const linkClass = buttonIcon ? \"hasIcon\" : \"noIcon\";\n    if (buttonType === \"internalLink\") {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: buttonHref,\n        className: linkClass,\n        children: [buttonIcon ? /*#__PURE__*/_jsxDEV(ImageContainer, {\n          data: {\n            imageSource: buttonIcon,\n            imageAlt: \"button Icon\",\n            imageHref: \"\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: buttonCopy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this);\n    } else if (buttonType === \"externalLink\") {\n      return /*#__PURE__*/_jsxDEV(\"a\", {\n        href: buttonHref,\n        className: linkClass,\n        target: \"_blank\",\n        rel: \"noreferrer\",\n        children: [buttonIcon ? /*#__PURE__*/_jsxDEV(ImageContainer, {\n          data: {\n            imageSource: buttonIcon,\n            imageAlt: \"button Icon\",\n            imageHref: \"\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: buttonCopy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this);\n    } else if (buttonType === \"function\") {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: buttonFunction,\n        className: linkClass,\n        children: [buttonIcon ? /*#__PURE__*/_jsxDEV(ImageContainer, {\n          data: {\n            imageSource: buttonIcon,\n            imageAlt: \"button Icon\",\n            imageHref: \"\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: buttonCopy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: linkClass,\n        children: [buttonIcon ? /*#__PURE__*/_jsxDEV(ImageContainer, {\n          data: {\n            imageSource: buttonIcon,\n            imageAlt: \"button Icon\",\n            imageHref: \"\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: buttonCopy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this);\n    }\n  };\n\n  //Variables\n  const ButtonClass = buttonClass ? \"Button \" + buttonClass : \"Button\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: ButtonClass,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner\",\n      children: generateButton()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n_c = Button;\nexport default Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["React","Link","ImageContainer","Button","props","buttonClass","data","buttonCopy","buttonIcon","buttonType","buttonHref","buttonFunction","generateButton","linkClass","imageSource","imageAlt","imageHref","ButtonClass"],"sources":["C:/Users/dms_2/Documents/AddMustard-repos/addMusatrd/client/src/Components/Buttons/Button.tsx"],"sourcesContent":["/*\n    Project : AddMustard\n    Author(s) : David Charles\n*/\n\n//Dependencies\nimport React from \"react\";\nimport { Link, LinkProps } from \"react-router-dom\";\n\n//Components\nimport ImageContainer from \"../ImageContainer/ImageContainer\";\n\n//Interfaces\nimport { ButtonInterface } from \"./ButtonInterfaces\";\n\n//Styles\nimport \"./Button.scss\";\n\n//Component\nconst Button : React.FC<ButtonInterface> = (props : ButtonInterface) => {\n    //Properties\n    const buttonClass : string | undefined = props.data.buttonClass; \n    const buttonCopy : string = props.data.buttonCopy; \n    const buttonIcon : string | undefined = props.data.buttonIcon; \n    const buttonType : string | undefined = props.data.buttonType;\n    const buttonHref : string | LinkProps[\"to\"] = props.data.buttonHref || \"\"; \n    const buttonFunction : (() => void) | undefined = props.data.buttonFunction;\n\n    //Functions\n    const generateButton : () => JSX.Element = () => {\n        const linkClass : string = buttonIcon ? \"hasIcon\" : \"noIcon\";\n\n        if (buttonType === \"internalLink\") {\n            return (\n                <Link to={buttonHref} className={linkClass}>\n                    {\n                        buttonIcon ?\n                            <ImageContainer data={{ imageSource: buttonIcon, imageAlt: \"button Icon\", imageHref: \"\" }} />\n                            :\n                            <></>\n                    }\n\n                    <span>{buttonCopy}</span>\n                </Link>\n            )\n\n        } else if (buttonType === \"externalLink\") {\n            return (\n                <a href={buttonHref} className={linkClass} target=\"_blank\" rel=\"noreferrer\">\n                    {\n                        buttonIcon ?\n                            <ImageContainer data={{ imageSource: buttonIcon, imageAlt: \"button Icon\", imageHref: \"\" }} />\n                            :\n                            <></>\n                    }\n\n                    <span>{buttonCopy}</span>\n                </a>\n            )\n\n        } else if (buttonType === \"function\") {\n            return (\n                <p onClick={buttonFunction} className={linkClass}>\n                    {\n                        buttonIcon ?\n                            <ImageContainer data={{ imageSource: buttonIcon, imageAlt: \"button Icon\", imageHref: \"\" }} />\n                            :\n                            <></>\n                    }\n\n                    <span>{buttonCopy}</span>\n                </p>\n            )\n\n        } else {\n            return (\n                <p className={linkClass}>\n                    {\n                        buttonIcon ?\n                            <ImageContainer data={{ imageSource: buttonIcon, imageAlt: \"button Icon\", imageHref: \"\" }} />\n                            :\n                            <></>\n                    }\n\n                    <span>{buttonCopy}</span>\n                </p>\n            )\n        }\n    }\n\n    //Variables\n    const ButtonClass : string = buttonClass ? \"Button \" + buttonClass : \"Button\";\n\n    return (\n        <div className={ButtonClass}>\n            <div className=\"inner\">\n                {generateButton()}\n            </div>\n        </div>\n    );\n};\nexport default Button;"],"mappings":";AAAA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAmB,kBAAkB;;AAElD;AACA,OAAOC,cAAc,MAAM,kCAAkC;;AAE7D;;AAGA;AACA,OAAO,eAAe;;AAEtB;AAAA;AAAA;AACA,MAAMC,MAAkC,GAAIC,KAAuB,IAAK;EACpE;EACA,MAAMC,WAAgC,GAAGD,KAAK,CAACE,IAAI,CAACD,WAAW;EAC/D,MAAME,UAAmB,GAAGH,KAAK,CAACE,IAAI,CAACC,UAAU;EACjD,MAAMC,UAA+B,GAAGJ,KAAK,CAACE,IAAI,CAACE,UAAU;EAC7D,MAAMC,UAA+B,GAAGL,KAAK,CAACE,IAAI,CAACG,UAAU;EAC7D,MAAMC,UAAqC,GAAGN,KAAK,CAACE,IAAI,CAACI,UAAU,IAAI,EAAE;EACzE,MAAMC,cAAyC,GAAGP,KAAK,CAACE,IAAI,CAACK,cAAc;;EAE3E;EACA,MAAMC,cAAkC,GAAG,MAAM;IAC7C,MAAMC,SAAkB,GAAGL,UAAU,GAAG,SAAS,GAAG,QAAQ;IAE5D,IAAIC,UAAU,KAAK,cAAc,EAAE;MAC/B,oBACI,QAAC,IAAI;QAAC,EAAE,EAAEC,UAAW;QAAC,SAAS,EAAEG,SAAU;QAAA,WAEnCL,UAAU,gBACN,QAAC,cAAc;UAAC,IAAI,EAAE;YAAEM,WAAW,EAAEN,UAAU;YAAEO,QAAQ,EAAE,aAAa;YAAEC,SAAS,EAAE;UAAG;QAAE;UAAA;UAAA;UAAA;QAAA,QAAG,gBAE7F,qCAAK,eAGb;UAAA,UAAOT;QAAU;UAAA;UAAA;UAAA;QAAA,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QACtB;IAGf,CAAC,MAAM,IAAIE,UAAU,KAAK,cAAc,EAAE;MACtC,oBACI;QAAG,IAAI,EAAEC,UAAW;QAAC,SAAS,EAAEG,SAAU;QAAC,MAAM,EAAC,QAAQ;QAAC,GAAG,EAAC,YAAY;QAAA,WAEnEL,UAAU,gBACN,QAAC,cAAc;UAAC,IAAI,EAAE;YAAEM,WAAW,EAAEN,UAAU;YAAEO,QAAQ,EAAE,aAAa;YAAEC,SAAS,EAAE;UAAG;QAAE;UAAA;UAAA;UAAA;QAAA,QAAG,gBAE7F,qCAAK,eAGb;UAAA,UAAOT;QAAU;UAAA;UAAA;UAAA;QAAA,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QACzB;IAGZ,CAAC,MAAM,IAAIE,UAAU,KAAK,UAAU,EAAE;MAClC,oBACI;QAAG,OAAO,EAAEE,cAAe;QAAC,SAAS,EAAEE,SAAU;QAAA,WAEzCL,UAAU,gBACN,QAAC,cAAc;UAAC,IAAI,EAAE;YAAEM,WAAW,EAAEN,UAAU;YAAEO,QAAQ,EAAE,aAAa;YAAEC,SAAS,EAAE;UAAG;QAAE;UAAA;UAAA;UAAA;QAAA,QAAG,gBAE7F,qCAAK,eAGb;UAAA,UAAOT;QAAU;UAAA;UAAA;UAAA;QAAA,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QACzB;IAGZ,CAAC,MAAM;MACH,oBACI;QAAG,SAAS,EAAEM,SAAU;QAAA,WAEhBL,UAAU,gBACN,QAAC,cAAc;UAAC,IAAI,EAAE;YAAEM,WAAW,EAAEN,UAAU;YAAEO,QAAQ,EAAE,aAAa;YAAEC,SAAS,EAAE;UAAG;QAAE;UAAA;UAAA;UAAA;QAAA,QAAG,gBAE7F,qCAAK,eAGb;UAAA,UAAOT;QAAU;UAAA;UAAA;UAAA;QAAA,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QACzB;IAEZ;EACJ,CAAC;;EAED;EACA,MAAMU,WAAoB,GAAGZ,WAAW,GAAG,SAAS,GAAGA,WAAW,GAAG,QAAQ;EAE7E,oBACI;IAAK,SAAS,EAAEY,WAAY;IAAA,uBACxB;MAAK,SAAS,EAAC,OAAO;MAAA,UACjBL,cAAc;IAAE;MAAA;MAAA;MAAA;IAAA;EACf;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAC,KAjFIT,MAAkC;AAkFxC,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}