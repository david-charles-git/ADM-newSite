{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aaron Ormerod\\\\Desktop\\\\ADM-newSite\\\\client\\\\src\\\\Components\\\\Headers\\\\Header.tsx\",\n  _s = $RefreshSig$();\n/*\r\n    Project : AddMustard\r\n    Author(s) : David Charles\r\n*/\n\n//Dependencies\nimport React from 'react';\nimport { Children, useEffect, useState } from \"react\";\n\n//Components\nimport ImageContainer from \"../ImageContainers/ImageContainer\";\nimport Tilt from '../Tilt/Tilt';\n\n//Styles\nimport \"./Header.scss\";\n\n//Interfaces\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//Images\nconst burgerMenuOpen_icon = require(\"../../Images/burgerMenuOpen_icon.svg\").default;\nconst burgerMenuClose_icon = require(\"../../Images/burgerMenuClose_icon.svg\").default;\nconst headerLogo = require(\"../../Images/ADM_Logo_Black.svg\").default;\n\n//Component\nconst Header = props => {\n  _s();\n  //States\n  var [navigationIsOpen, setNavigationIsOpen] = useState(false);\n  var [burgerMenuIcon, setBurgerMenuIcon] = useState(burgerMenuOpen_icon);\n\n  //Functions\n  const handleNavigationOpenClose = () => {\n    const newBurgerMenuIcon = navigationIsOpen ? burgerMenuOpen_icon : burgerMenuClose_icon;\n    setBurgerMenuIcon(newBurgerMenuIcon);\n    setNavigationIsOpen(!navigationIsOpen);\n  };\n  const handleNavigationOpenCloseOnScreenSizeChange = () => {\n    setBurgerMenuIcon(burgerMenuOpen_icon);\n    setNavigationIsOpen(false);\n  };\n\n  //Variables\n  const childrenCount = Children.toArray(props.children).length;\n  const navigationClass = navigationIsOpen ? \"navigation active\" : \"navigation\";\n  const navigationStyle = {\n    gridTemplateColumns: \"repeat(\" + childrenCount + \", auto)\"\n  };\n\n  //Effects \n  useEffect(() => {\n    window.addEventListener(\"resize\", handleNavigationOpenCloseOnScreenSizeChange);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"Header\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(ImageContainer, {\n          data: {\n            imageSource: headerLogo,\n            imageAlt: \"home button\",\n            imageHrefType: \"internalLink\",\n            imageHref: \"/\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: navigationClass,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner\",\n          style: navigationStyle,\n          children: Children.toArray(props.children).map((child, key) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item\",\n              children: child\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"burgerMenuContainer\",\n        onClick: handleNavigationOpenClose,\n        children: [/*#__PURE__*/_jsxDEV(Tilt, {\n          data: {\n            maxRotation: 4,\n            maxSkew: 4,\n            backgroundColor: \"#000000\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"burgerMenu\",\n            style: {\n              backgroundImage: \"url(\" + burgerMenuIcon + \")\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(Header, \"9X25QSHxepUi2RpF9IrRvloQ8mI=\");\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","Children","useEffect","useState","ImageContainer","Tilt","burgerMenuOpen_icon","require","default","burgerMenuClose_icon","headerLogo","Header","props","navigationIsOpen","setNavigationIsOpen","burgerMenuIcon","setBurgerMenuIcon","handleNavigationOpenClose","newBurgerMenuIcon","handleNavigationOpenCloseOnScreenSizeChange","childrenCount","toArray","children","length","navigationClass","navigationStyle","gridTemplateColumns","window","addEventListener","imageSource","imageAlt","imageHrefType","imageHref","map","child","key","maxRotation","maxSkew","backgroundColor","backgroundImage"],"sources":["C:/Users/Aaron Ormerod/Desktop/ADM-newSite/client/src/Components/Headers/Header.tsx"],"sourcesContent":["/*\r\n    Project : AddMustard\r\n    Author(s) : David Charles\r\n*/\r\n\r\n//Dependencies\r\nimport React from 'react';\r\nimport { Children, useEffect, useState } from \"react\";\r\n\r\n//Components\r\nimport ImageContainer from \"../ImageContainers/ImageContainer\";\r\nimport Tilt from '../Tilt/Tilt';\r\n\r\n//Styles\r\nimport \"./Header.scss\";\r\n\r\n//Interfaces\r\nimport { HeaderInterface, HeaderNavigationStyleInterface } from \"./HeaderInterfaces\";\r\n\r\n//Images\r\nconst burgerMenuOpen_icon : string = require(\"../../Images/burgerMenuOpen_icon.svg\").default;\r\nconst burgerMenuClose_icon : string = require( \"../../Images/burgerMenuClose_icon.svg\").default;\r\nconst headerLogo : string = require(\"../../Images/ADM_Logo_Black.svg\").default;\r\n\r\n//Component\r\nconst Header : React.FC<HeaderInterface> = (props : HeaderInterface) => {\r\n    //States\r\n    var [navigationIsOpen, setNavigationIsOpen] = useState<boolean>(false);\r\n    var [burgerMenuIcon, setBurgerMenuIcon] = useState<string>(burgerMenuOpen_icon);\r\n\r\n    //Functions\r\n    const handleNavigationOpenClose : () => void = () => {\r\n        const newBurgerMenuIcon : string = navigationIsOpen ? burgerMenuOpen_icon : burgerMenuClose_icon;\r\n        \r\n        setBurgerMenuIcon(newBurgerMenuIcon);\r\n        setNavigationIsOpen(!navigationIsOpen);\r\n    };\r\n    const handleNavigationOpenCloseOnScreenSizeChange : () => void = () => {\r\n        setBurgerMenuIcon(burgerMenuOpen_icon);\r\n        setNavigationIsOpen(false);\r\n    };\r\n    \r\n    //Variables\r\n    const childrenCount : number =  Children.toArray(props.children).length;\r\n    const navigationClass : string = navigationIsOpen ? \"navigation active\" : \"navigation\";\r\n    const navigationStyle : HeaderNavigationStyleInterface = {\r\n        gridTemplateColumns: \"repeat(\" + childrenCount + \", auto)\"\r\n        \r\n    };\r\n\r\n    //Effects \r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", handleNavigationOpenCloseOnScreenSizeChange);\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <header className=\"Header\">\r\n            <div className=\"inner\">\r\n                <div className=\"logo\">\r\n                    <ImageContainer data={{ imageSource: headerLogo, imageAlt: \"home button\", imageHrefType : \"internalLink\", imageHref: \"/\" }} />\r\n                </div>\r\n\r\n                <nav className={navigationClass}>\r\n                    <div className=\"inner\" style={navigationStyle}>\r\n                        {\r\n                            Children.toArray(props.children).map((child : React.ReactNode, key : number) => {\r\n                                return (\r\n                                    <div key={key} className='item'>\r\n                                        {child}\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </nav>\r\n\r\n                <div className=\"burgerMenuContainer\" onClick={handleNavigationOpenClose}>\r\n                    <Tilt data={{ maxRotation : 4, maxSkew: 4, backgroundColor : \"#000000\" }} />\r\n                    \r\n                    <div className=\"inner\">\r\n                        <div className=\"burgerMenu\" style={{ backgroundImage: \"url(\" + burgerMenuIcon + \")\" }} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\nexport default Header;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}