{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dms_2\\\\Desktop\\\\ADM-newSite\\\\client\\\\src\\\\Components\\\\Carousels\\\\TabbedCarousel.tsx\",\n  _s = $RefreshSig$();\n/*\r\n    Project : AddMustard\r\n    Author(s) : David Charles\r\n*/\n\n//Dependencies\nimport React from \"react\";\nimport { Children, useState, useEffect } from \"react\";\n\n//Components\nimport Tilt from \"../Tilt/Tilt\";\nimport TiltButton from \"../Buttons/TiltButton\";\n\n//Styles\nimport \"./Carousel.scss\";\n\n//Interfaces\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n//Component\nconst TabbedCarousel = props => {\n  _s();\n  //Properties\n  const childrenCount = Children.count(props.children);\n  const carouselClass = props.data.carouselClass;\n  const carouselViewAllCopy = props.data.carouselViewAllCopy;\n  const carouselViewAllType = props.data.carouselViewAllType;\n  const carouselViewAllHref = props.data.carouselViewAllHref;\n\n  //States\n  var [activeStackCount, setActiveStackCount] = useState(0);\n  var [rightValue, setRightValue] = useState(96);\n\n  //Functions\n  const handleSetActiveStackCount = key => {\n    var newActivestackCount = key;\n    if (newActivestackCount <= 0) {\n      newActivestackCount = 0;\n    } else if (newActivestackCount >= childrenCount - 1) {\n      newActivestackCount = childrenCount - 1;\n    } else {}\n    setActiveStackCount(newActivestackCount);\n  };\n  const handleSetToTopRightValue = () => {\n    const maxScreenWidth = 1920;\n    const screenWidth = window.innerWidth;\n    const screenBreakPoint = maxScreenWidth + maxScreenWidth / 10;\n    const rightValue = screenWidth <= screenBreakPoint ? screenWidth / 20 : (screenWidth - maxScreenWidth) / 2;\n    setRightValue(rightValue);\n  };\n\n  //Variables\n  const TabbedCarouselClass = carouselClass ? \"TabbedCarousel \" + carouselClass : \"TabbedCarousel\";\n\n  //Effects\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleSetToTopRightValue);\n    window.addEventListener(\"load\", handleSetToTopRightValue);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: TabbedCarouselClass,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"outer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner\",\n        children: childrenCount > 0 ? Children.map(props.children, (child, key) => {\n          const childClass = key === activeStackCount ? \"item active\" : \"item\";\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: childClass,\n            children: child\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 37\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), childrenCount > 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tabContainer\",\n        style: {\n          right: rightValue + \"px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner\",\n          children: childrenCount > 0 ? Children.map(props.children, (child, key) => {\n            const target = child ? child : {\n              props: {\n                data: {\n                  cardTitle: \"\"\n                }\n              }\n            };\n            const props = target.props ? target.props : {\n              data: {\n                cardTitle: \"\"\n              }\n            };\n            const data = props.data ? props.data : {\n              cardTitle: \"\"\n            };\n            const childTitle = data.cardTitle ? data.cardTitle : \"\";\n            const childClass = key === activeStackCount ? \"tab active\" : \"tab\";\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: childClass,\n              onClick: () => {\n                handleSetActiveStackCount(key);\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"inner\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"dot\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"inner\",\n                    children: /*#__PURE__*/_jsxDEV(Tilt, {\n                      data: {\n                        maxRotation: 4,\n                        maxSkew: 4,\n                        backgroundColor: \"#ffffff\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 105,\n                      columnNumber: 65\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 61\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 57\n                }, this), childTitle ? /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: childTitle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 74\n                }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 53\n              }, this)\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 49\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), carouselViewAllCopy ? /*#__PURE__*/_jsxDEV(TiltButton, {\n        data: {\n          buttonCopy: carouselViewAllCopy,\n          buttonType: carouselViewAllType,\n          buttonHref: carouselViewAllHref\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(TabbedCarousel, \"0vtfn1/nf9OXXn3GoChirkDoBNM=\");\n_c = TabbedCarousel;\nexport default TabbedCarousel;\nvar _c;\n$RefreshReg$(_c, \"TabbedCarousel\");","map":{"version":3,"names":["React","Children","useState","useEffect","Tilt","TiltButton","TabbedCarousel","props","childrenCount","count","children","carouselClass","data","carouselViewAllCopy","carouselViewAllType","carouselViewAllHref","activeStackCount","setActiveStackCount","rightValue","setRightValue","handleSetActiveStackCount","key","newActivestackCount","handleSetToTopRightValue","maxScreenWidth","screenWidth","window","innerWidth","screenBreakPoint","TabbedCarouselClass","addEventListener","map","child","childClass","right","target","cardTitle","childTitle","maxRotation","maxSkew","backgroundColor","buttonCopy","buttonType","buttonHref"],"sources":["C:/Users/dms_2/Desktop/ADM-newSite/client/src/Components/Carousels/TabbedCarousel.tsx"],"sourcesContent":["/*\r\n    Project : AddMustard\r\n    Author(s) : David Charles\r\n*/\r\n\r\n//Dependencies\r\nimport React from \"react\";\r\nimport {Children, useState, useEffect} from \"react\";\r\n\r\n//Components\r\nimport Tilt from \"../Tilt/Tilt\";\r\nimport TiltButton from \"../Buttons/TiltButton\";\r\n\r\n//Styles\r\nimport \"./Carousel.scss\";\r\n\r\n//Interfaces\r\nimport { TabbedCarouselInterface } from \"./CarouselInterfaces\";\r\n\r\n//Component\r\nconst TabbedCarousel : React.FC<TabbedCarouselInterface> = (props : TabbedCarouselInterface) => {\r\n    //Properties\r\n    const childrenCount : number = Children.count(props.children);\r\n    const carouselClass : string | undefined = props.data.carouselClass;\r\n    const carouselViewAllCopy : string | undefined = props.data.carouselViewAllCopy;\r\n    const carouselViewAllType : string | undefined = props.data.carouselViewAllType;\r\n    const carouselViewAllHref : string | undefined = props.data.carouselViewAllHref;\r\n    \r\n    //States\r\n    var [activeStackCount, setActiveStackCount] = useState<number>(0);\r\n    var [rightValue, setRightValue] = useState<number>(96);\r\n\r\n    //Functions\r\n    const handleSetActiveStackCount : (key : number) => void = (key) => {\r\n        var newActivestackCount : number = key;\r\n\r\n        if (newActivestackCount <= 0) {\r\n            newActivestackCount = 0;\r\n\r\n        } else if (newActivestackCount >= childrenCount - 1 ) {\r\n            newActivestackCount = childrenCount -1;\r\n\r\n        } else {\r\n\r\n        }\r\n\r\n        setActiveStackCount(newActivestackCount);\r\n    };\r\n    const handleSetToTopRightValue : () => void = () => {\r\n        const maxScreenWidth : number = 1920;\r\n        const screenWidth : number = window.innerWidth;\r\n        const screenBreakPoint : number = maxScreenWidth + ( maxScreenWidth / 10 );\r\n        const rightValue : number = screenWidth <= screenBreakPoint ? ( screenWidth / 20 ) : ( ( screenWidth - maxScreenWidth ) / 2 );\r\n\r\n        setRightValue(rightValue);\r\n    };\r\n\r\n    //Variables\r\n    const TabbedCarouselClass : string = carouselClass ? \"TabbedCarousel \" + carouselClass : \"TabbedCarousel\";\r\n\r\n    //Effects\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", handleSetToTopRightValue);\r\n        window.addEventListener(\"load\", handleSetToTopRightValue);\r\n    });\r\n\r\n    return (\r\n        <div className={TabbedCarouselClass}>\r\n            <div className=\"outer\">\r\n                <div className=\"inner\">\r\n                    {\r\n                        childrenCount > 0 ?\r\n                            Children.map(props.children, (child : React.ReactNode | React.ReactElement, key : number) => {\r\n                                const childClass : string = key === activeStackCount ? \"item active\" : \"item\";\r\n\r\n                                return (\r\n                                    <div className={childClass} key={key}>\r\n                                        {child}\r\n                                    </div>\r\n                                )\r\n                            })\r\n                            :\r\n                            <></>\r\n                    }\r\n                </div>\r\n\r\n                {\r\n                    childrenCount > 1 ?\r\n                        <div className=\"tabContainer\" style={{ right: rightValue + \"px\" }}>\r\n                            <div className=\"inner\">\r\n                                {\r\n                                    childrenCount > 0 ?\r\n                                        Children.map(props.children, (child : React.ReactNode | React.ReactElement, key : number) => {\r\n                                            const target : any = child ? child : { props : { data : { cardTitle : \"\" } } };\r\n                                            const props : any = target.props ? target.props : { data : { cardTitle : \"\" } };\r\n                                            const data : any = props.data ? props.data : { cardTitle : \"\" };\r\n                                            const childTitle : string = data.cardTitle ? data.cardTitle : \"\";\r\n                                            const childClass : string = key === activeStackCount ? \"tab active\" : \"tab\";\r\n            \r\n                                            return (\r\n                                                <div className={childClass} key={key} onClick={() => { handleSetActiveStackCount(key) }}>\r\n                                                    <div className=\"inner\">\r\n                                                        <div className=\"dot\">\r\n                                                            <div className=\"inner\">\r\n                                                                <Tilt data={{ maxRotation : 4, maxSkew : 4, backgroundColor : \"#ffffff\" }} />\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        {\r\n                                                            childTitle ? <p>{childTitle}</p> : <></>\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                        :\r\n                                        <></>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        <></>\r\n                }\r\n\r\n                {\r\n                    carouselViewAllCopy ?\r\n                        <TiltButton data={{ buttonCopy : carouselViewAllCopy, buttonType : carouselViewAllType, buttonHref : carouselViewAllHref }} />\r\n                        :\r\n                        <></>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default TabbedCarousel;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}