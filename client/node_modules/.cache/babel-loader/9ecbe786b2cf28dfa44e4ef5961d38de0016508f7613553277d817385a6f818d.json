{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dms_2\\\\Documents\\\\AddMustard-repos\\\\addMusatrd\\\\client\\\\src\\\\Components\\\\Tilt\\\\Tilt.tsx\";\n/*\r\n    Project : AddMustard\r\n    Author(s) : David Charles\r\n*/\n\n//Dependencies\nimport React from \"react\";\nimport { generateRandomNumber } from \"../../Utilities/helpers\";\n\n//Interfaces\n\n//Styles\nimport \"./Tilt.scss\";\n\n//Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tilt = props => {\n  //Properties\n  const maxRotation = props.data.maxRotation;\n  const maxSkew = props.data.maxSkew;\n  const backgroundColor = props.data.backgroundColor;\n\n  //Functions\n  const generateTiltValues = props => {\n    /*\r\n        Creates a random value between -maxTiltVale and +maxTiltValue\r\n        Take random Number between -maxTiltVale and +maxTiltVale\r\n        Multiply the Number by -1 to the power of 1 or 2 (generated randomly)\r\n    */\n    const rotation = generateRandomNumber(-1 * props.maxRotation, props.maxRotation) * Math.pow(-1, generateRandomNumber(1, 2));\n    const skew = generateRandomNumber(-1 * props.maxSkew, props.maxSkew) * Math.pow(-1, generateRandomNumber(1, 2));\n    const tiltValues = {\n      rotation: rotation,\n      skew: skew\n    };\n    return tiltValues;\n  };\n\n  //Variables\n  const tiltValueProps = {\n    maxRotation: maxRotation,\n    maxSkew: maxSkew\n  };\n  const tiltValues = generateTiltValues(tiltValueProps);\n  const tiltStyle = {\n    backgroundColor: backgroundColor,\n    transform: \"rotate(\" + tiltValues.rotation + \"deg) skewX(\" + tiltValues.skew + \"deg)\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tiltContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tilt\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner\",\n        style: tiltStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_c = Tilt;\nexport default Tilt;\nvar _c;\n$RefreshReg$(_c, \"Tilt\");","map":{"version":3,"names":["React","generateRandomNumber","Tilt","props","maxRotation","data","maxSkew","backgroundColor","generateTiltValues","rotation","Math","pow","skew","tiltValues","tiltValueProps","tiltStyle","transform"],"sources":["C:/Users/dms_2/Documents/AddMustard-repos/addMusatrd/client/src/Components/Tilt/Tilt.tsx"],"sourcesContent":["/*\r\n    Project : AddMustard\r\n    Author(s) : David Charles\r\n*/\r\n\r\n//Dependencies\r\nimport React from \"react\";\r\nimport { generateRandomNumber } from \"../../Utilities/helpers\";\r\n\r\n//Interfaces\r\nimport { TiltInterface,TiltStyleInterface, TiltValueInterface, GenerateTiltValuesParametersInterface } from \"./TiltInterfaces\";\r\n\r\n//Styles\r\nimport \"./Tilt.scss\";\r\n\r\n//Component\r\nconst Tilt : React.FC<TiltInterface> = (props : TiltInterface) => {\r\n    //Properties\r\n    const maxRotation : number = props.data.maxRotation;\r\n    const maxSkew : number = props.data.maxSkew;\r\n    const backgroundColor : string = props.data.backgroundColor;\r\n\r\n    //Functions\r\n    const generateTiltValues : (props : GenerateTiltValuesParametersInterface) => TiltValueInterface = (props) => {\r\n        /*\r\n            Creates a random value between -maxTiltVale and +maxTiltValue\r\n            Take random Number between -maxTiltVale and +maxTiltVale\r\n            Multiply the Number by -1 to the power of 1 or 2 (generated randomly)\r\n        */\r\n        const rotation : number = generateRandomNumber((-1) * props.maxRotation, props.maxRotation) * Math.pow(-1, generateRandomNumber(1, 2));\r\n        const skew : number = generateRandomNumber((-1) * props.maxSkew, props.maxSkew) * Math.pow(-1, generateRandomNumber(1, 2));\r\n    \r\n        const tiltValues : TiltValueInterface = {\r\n            rotation : rotation,\r\n            skew : skew\r\n        };\r\n    \r\n        return tiltValues;\r\n    };\r\n\r\n    //Variables\r\n    const tiltValueProps : GenerateTiltValuesParametersInterface = {\r\n        maxRotation : maxRotation,\r\n        maxSkew : maxSkew\r\n    };\r\n    const tiltValues : TiltValueInterface = generateTiltValues(tiltValueProps);\r\n    const tiltStyle : TiltStyleInterface = {\r\n        backgroundColor : backgroundColor,\r\n        transform : \"rotate(\" + tiltValues.rotation + \"deg) skewX(\" + tiltValues.skew + \"deg)\"\r\n    };\r\n\r\n    return (\r\n        <div className=\"tiltContainer\">\r\n            <div className=\"tilt\">\r\n                <div className=\"inner\" style={tiltStyle} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Tilt;"],"mappings":";AAAA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,oBAAoB,QAAQ,yBAAyB;;AAE9D;;AAGA;AACA,OAAO,aAAa;;AAEpB;AAAA;AACA,MAAMC,IAA8B,GAAIC,KAAqB,IAAK;EAC9D;EACA,MAAMC,WAAoB,GAAGD,KAAK,CAACE,IAAI,CAACD,WAAW;EACnD,MAAME,OAAgB,GAAGH,KAAK,CAACE,IAAI,CAACC,OAAO;EAC3C,MAAMC,eAAwB,GAAGJ,KAAK,CAACE,IAAI,CAACE,eAAe;;EAE3D;EACA,MAAMC,kBAA0F,GAAIL,KAAK,IAAK;IAC1G;AACR;AACA;AACA;AACA;IACQ,MAAMM,QAAiB,GAAGR,oBAAoB,CAAE,CAAC,CAAC,GAAIE,KAAK,CAACC,WAAW,EAAED,KAAK,CAACC,WAAW,CAAC,GAAGM,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC,EAAEV,oBAAoB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACtI,MAAMW,IAAa,GAAGX,oBAAoB,CAAE,CAAC,CAAC,GAAIE,KAAK,CAACG,OAAO,EAAEH,KAAK,CAACG,OAAO,CAAC,GAAGI,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC,EAAEV,oBAAoB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAE1H,MAAMY,UAA+B,GAAG;MACpCJ,QAAQ,EAAGA,QAAQ;MACnBG,IAAI,EAAGA;IACX,CAAC;IAED,OAAOC,UAAU;EACrB,CAAC;;EAED;EACA,MAAMC,cAAsD,GAAG;IAC3DV,WAAW,EAAGA,WAAW;IACzBE,OAAO,EAAGA;EACd,CAAC;EACD,MAAMO,UAA+B,GAAGL,kBAAkB,CAACM,cAAc,CAAC;EAC1E,MAAMC,SAA8B,GAAG;IACnCR,eAAe,EAAGA,eAAe;IACjCS,SAAS,EAAG,SAAS,GAAGH,UAAU,CAACJ,QAAQ,GAAG,aAAa,GAAGI,UAAU,CAACD,IAAI,GAAG;EACpF,CAAC;EAED,oBACI;IAAK,SAAS,EAAC,eAAe;IAAA,uBAC1B;MAAK,SAAS,EAAC,MAAM;MAAA,uBACjB;QAAK,SAAS,EAAC,OAAO;QAAC,KAAK,EAAEG;MAAU;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA;EACzC;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAC,KA1CIb,IAA8B;AA2CpC,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}