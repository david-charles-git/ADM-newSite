{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dms_2\\\\Documents\\\\AddMustard-repos\\\\addMusatrd\\\\client\\\\src\\\\Components\\\\Cards\\\\BlogCard.tsx\";\n/*\r\n    Project : AddMustard\r\n    Author(s) : David Charles\r\n*/\n\n//Dependencies\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n//Componenets\nimport TiltButton from \"../Buttons/TiltButton\";\nimport ImageContainer from \"../ImageContainer/ImageContainer\";\n\n//Styles\nimport \"./Cards.scss\";\n\n//Interfaces\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n//Component\nconst BlogCard = props => {\n  //Properties\n  const cardClass = props.data.cardClass;\n  const cardTitle = props.data.cardTitle;\n  const cardCopy = props.data.cardCopy;\n  const cardImage = props.data.cardImage;\n  const cardImageAlt = props.data.cardImageAlt;\n  const cardTags = props.data.cardTags || [];\n  const cardLinkCopy = props.data.cardLinkCopy;\n  const cardLinkType = props.data.cardLinkType;\n  const cardLinkHref = props.data.cardLinkHref || \"\";\n\n  //Fucntions\n  const generateBlogCardContent = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contentContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner\",\n          children: [cardTitle ? /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: cardTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 39\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), cardCopy ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: cardCopy\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 38\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), cardTags.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tagContainer\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner\",\n              children: cardTags.map((tag, key) => {\n                const tagClassName = \"tag \" + tag;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: tagClassName,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"inner\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: tag\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 54,\n                      columnNumber: 61\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 53,\n                    columnNumber: 57\n                  }, this)\n                }, key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 53\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), cardImage ? /*#__PURE__*/_jsxDEV(ImageContainer, {\n        data: {\n          imageSource: cardImage,\n          imageAlt: cardImageAlt,\n          imageHrefType: \"externalLink\",\n          imageHref: \"\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(TiltButton, {\n        data: {\n          buttonClass: \"\",\n          buttonCopy: cardLinkCopy,\n          buttonIcon: \"\",\n          buttonType: cardLinkType,\n          buttonHref: cardLinkHref,\n          buttonFunction: () => {},\n          tiltBackgroundColor: \"#FFF\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  };\n  const generateBlogCardInterior = () => {\n    if (cardLinkHref) {\n      if (cardLinkType === \"internalLink\") {\n        return /*#__PURE__*/_jsxDEV(Link, {\n          className: innerClassName,\n          to: cardLinkHref,\n          children: generateBlogCardContent()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this);\n      } else if (cardLinkType === \"externalLink\") {\n        return /*#__PURE__*/_jsxDEV(\"a\", {\n          className: innerClassName,\n          href: cardLinkHref,\n          rel: \"noreferrer\",\n          target: \"_blank\",\n          children: generateBlogCardContent()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this);\n      }\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: innerClassName,\n      children: generateBlogCardContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this);\n  };\n\n  //Variables\n  const BlogCardClass = cardClass ? \"BlogCard \" + cardClass : \"BlogCard\";\n  const innerClassName = cardImage ? \"inner withImage\" : \"inner\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: BlogCardClass,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tilt\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner\",\n        style: {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), generateBlogCardInterior()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n};\n_c = BlogCard;\nexport default BlogCard;\nvar _c;\n$RefreshReg$(_c, \"BlogCard\");","map":{"version":3,"names":["React","Link","TiltButton","ImageContainer","BlogCard","props","cardClass","data","cardTitle","cardCopy","cardImage","cardImageAlt","cardTags","cardLinkCopy","cardLinkType","cardLinkHref","generateBlogCardContent","length","map","tag","key","tagClassName","imageSource","imageAlt","imageHrefType","imageHref","buttonClass","buttonCopy","buttonIcon","buttonType","buttonHref","buttonFunction","tiltBackgroundColor","generateBlogCardInterior","innerClassName","BlogCardClass"],"sources":["C:/Users/dms_2/Documents/AddMustard-repos/addMusatrd/client/src/Components/Cards/BlogCard.tsx"],"sourcesContent":["/*\r\n    Project : AddMustard\r\n    Author(s) : David Charles\r\n*/\r\n\r\n//Dependencies\r\nimport React from \"react\";\r\nimport { Link, LinkProps } from \"react-router-dom\";\r\n\r\n//Componenets\r\nimport TiltButton from \"../Buttons/TiltButton\";\r\nimport ImageContainer from \"../ImageContainer/ImageContainer\";\r\n\r\n//Styles\r\nimport \"./Cards.scss\";\r\n\r\n//Interfaces\r\nimport { BlogCardInterface } from \"./CardInterfaces\";\r\n\r\n//Component\r\nconst BlogCard : React.FC<BlogCardInterface> = (props : BlogCardInterface) => {\r\n    //Properties\r\n    const cardClass : string | undefined = props.data.cardClass; \r\n    const cardTitle : string | undefined = props.data.cardTitle;\r\n    const cardCopy : string | undefined = props.data.cardCopy;\r\n    const cardImage : string | undefined = props.data.cardImage;\r\n    const cardImageAlt : string | undefined = props.data.cardImageAlt;\r\n    const cardTags : Array<string> = props.data.cardTags || [];\r\n    const cardLinkCopy : string | undefined = props.data.cardLinkCopy;\r\n    const cardLinkType : string | undefined = props.data.cardLinkType;\r\n    const cardLinkHref : string | LinkProps[\"to\"] = props.data.cardLinkHref || \"\";\r\n\r\n    //Fucntions\r\n    const generateBlogCardContent : () => JSX.Element = () => {\r\n        return (\r\n            <>\r\n                <div className=\"contentContainer\">\r\n                    <div className=\"inner\">\r\n                        { cardTitle ? <h3>{cardTitle}</h3> : <></> }\r\n\r\n                        { cardCopy ? <p>{cardCopy}</p> : <></> }\r\n                            \r\n                        {\r\n                            cardTags.length > 0 ?\r\n                                <div className=\"tagContainer\">\r\n                                    <div className=\"inner\">\r\n                                        {\r\n                                            cardTags.map((tag : string, key : number) => {\r\n                                                const tagClassName : string = \"tag \" + tag;\r\n\r\n                                                return (\r\n                                                    <div key={key} className={tagClassName}>\r\n                                                        <div className=\"inner\">\r\n                                                            <p>{tag}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                :\r\n                                <></>\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    cardImage ?\r\n                        <ImageContainer data={{ imageSource: cardImage, imageAlt: cardImageAlt, imageHrefType : \"externalLink\", imageHref: \"\" }} />\r\n                        :\r\n                        <></>\r\n                }\r\n\r\n                <TiltButton data={{\r\n                    buttonClass : \"\",\r\n                    buttonCopy : cardLinkCopy,\r\n                    buttonIcon : \"\",\r\n                    buttonType : cardLinkType,\r\n                    buttonHref : cardLinkHref,\r\n                    buttonFunction : () => {},\r\n                    tiltBackgroundColor : \"#FFF\"\r\n                }} />\r\n            </>\r\n        )\r\n    };\r\n    const generateBlogCardInterior : () => JSX.Element = () => {\r\n        if (cardLinkHref) {\r\n            if (cardLinkType === \"internalLink\") {\r\n                return (\r\n                    <Link className={innerClassName} to={cardLinkHref}>\r\n                        { generateBlogCardContent() }\r\n                    </Link>\r\n                )\r\n\r\n            } else if (cardLinkType === \"externalLink\") {\r\n                return (\r\n                    <a className={innerClassName} href={cardLinkHref} rel=\"noreferrer\" target=\"_blank\">\r\n                        { generateBlogCardContent() }\r\n                    </a>\r\n                )\r\n\r\n            }\r\n        }\r\n        \r\n        return (\r\n            <div className={innerClassName}>\r\n                { generateBlogCardContent() }\r\n            </div>\r\n        )\r\n    };\r\n\r\n    //Variables\r\n    const BlogCardClass : string = cardClass ? \"BlogCard \" + cardClass : \"BlogCard\";\r\n    const innerClassName : string = cardImage ? \"inner withImage\" : \"inner\";\r\n\r\n    return (\r\n        <div className={BlogCardClass}>\r\n            <div className=\"tilt\">\r\n                <div className=\"inner\" style={{}} />\r\n            </div>\r\n            { generateBlogCardInterior () }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BlogCard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}